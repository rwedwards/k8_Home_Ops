apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cni.projectcalico.org/containerID: e10fe7c532351817f7e211ef6d2c4a0db86ede8613a6881c55cea277775d00a9
      cni.projectcalico.org/podIP: 10.244.89.193/32
      cni.projectcalico.org/podIPs: 10.244.89.193/32
    creationTimestamp: "2025-07-16T21:57:52Z"
    generateName: nginx-ingress-nginx-controller-77f69d484c-
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
      pod-template-hash: 77f69d484c
    name: nginx-ingress-nginx-controller-77f69d484c-h9knx
    namespace: ingress-nginx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-ingress-nginx-controller-77f69d484c
      uid: 962b7f24-98c9-4c93-ba8f-f598136a3f3b
    resourceVersion: "2523"
    uid: 16fcebae-bc9c-4534-8b6b-548e422ab70c
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - /nginx-ingress-controller
      - --publish-service=$(POD_NAMESPACE)/nginx-ingress-nginx-controller
      - --election-id=nginx-ingress-nginx-leader
      - --controller-class=k8s.io/ingress-nginx
      - --ingress-class=nginx
      - --configmap=$(POD_NAMESPACE)/nginx-ingress-nginx-controller
      - --validating-webhook=:8443
      - --validating-webhook-certificate=/usr/local/certificates/cert
      - --validating-webhook-key=/usr/local/certificates/key
      - --enable-metrics=true
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: LD_PRELOAD
        value: /usr/local/lib/libmimalloc.so
      image: registry.k8s.io/ingress-nginx/controller:v1.13.0@sha256:dc75a7baec7a3b827a5d7ab0acd10ab507904c7dad692365b3e3b596eca1afd2
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - /wait-shutdown
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 80
        name: http
        protocol: TCP
      - containerPort: 443
        name: https
        protocol: TCP
      - containerPort: 10254
        name: metrics
        protocol: TCP
      - containerPort: 8443
        name: webhook
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 100m
          memory: 90Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsGroup: 82
        runAsNonRoot: true
        runAsUser: 101
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /usr/local/certificates/
        name: webhook-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5swk5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: taygete
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: nginx-ingress-nginx
    serviceAccountName: nginx-ingress-nginx
    terminationGracePeriodSeconds: 300
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: webhook-cert
      secret:
        defaultMode: 420
        secretName: nginx-ingress-nginx-admission
    - name: kube-api-access-5swk5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-16T21:58:05Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-07-16T21:57:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-16T21:58:22Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-16T21:58:22Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-07-16T21:57:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://84c296265fd3737ff94e23c30493e5d9c74b0d56788918ca7964f1520b5e2704
      image: sha256:d9b2df1fa40e21139c739be6f30bc530b64a9500e4ccc3d86814d28835f1f4b3
      imageID: registry.k8s.io/ingress-nginx/controller@sha256:dc75a7baec7a3b827a5d7ab0acd10ab507904c7dad692365b3e3b596eca1afd2
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-07-16T21:58:04Z"
    hostIP: 192.168.11.12
    hostIPs:
    - ip: 192.168.11.12
    phase: Running
    podIP: 10.244.89.193
    podIPs:
    - ip: 10.244.89.193
    qosClass: Burstable
    startTime: "2025-07-16T21:57:52Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
      metallb.universe.tf/ip-allocated-from-pool: main-pool
    creationTimestamp: "2025-07-16T21:57:52Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx-controller
    namespace: ingress-nginx
    resourceVersion: "2397"
    uid: 29e01287-0eec-47f5-8d16-5c503d9f1803
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.97.28.248
    clusterIPs:
    - 10.97.28.248
    externalTrafficPolicy: Local
    healthCheckNodePort: 31056
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    loadBalancerIP: 192.168.12.60
    ports:
    - appProtocol: http
      name: http
      nodePort: 30769
      port: 80
      protocol: TCP
      targetPort: http
    - appProtocol: https
      name: https
      nodePort: 31000
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 192.168.12.60
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx-controller-admission
    namespace: ingress-nginx
    resourceVersion: "2385"
    uid: 974b5037-f5d5-4afe-aed5-0393e82cf6ad
  spec:
    clusterIP: 10.104.20.189
    clusterIPs:
    - 10.104.20.189
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - appProtocol: https
      name: https-webhook
      port: 443
      protocol: TCP
      targetPort: webhook
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx-controller-metrics
    namespace: ingress-nginx
    resourceVersion: "2381"
    uid: 49203d4e-990e-4646-89f1-f2c8aa255806
  spec:
    clusterIP: 10.96.1.160
    clusterIPs:
    - 10.96.1.160
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: metrics
      port: 10254
      protocol: TCP
      targetPort: metrics
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/name: ingress-nginx
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx-controller
    namespace: ingress-nginx
    resourceVersion: "2532"
    uid: 1a31fcbf-c680-42f3-b39a-edc4dcf2dd42
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/name: ingress-nginx
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
          app.kubernetes.io/version: 1.13.0
          helm.sh/chart: ingress-nginx-4.13.0
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - /nginx-ingress-controller
          - --publish-service=$(POD_NAMESPACE)/nginx-ingress-nginx-controller
          - --election-id=nginx-ingress-nginx-leader
          - --controller-class=k8s.io/ingress-nginx
          - --ingress-class=nginx
          - --configmap=$(POD_NAMESPACE)/nginx-ingress-nginx-controller
          - --validating-webhook=:8443
          - --validating-webhook-certificate=/usr/local/certificates/cert
          - --validating-webhook-key=/usr/local/certificates/key
          - --enable-metrics=true
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: LD_PRELOAD
            value: /usr/local/lib/libmimalloc.so
          image: registry.k8s.io/ingress-nginx/controller:v1.13.0@sha256:dc75a7baec7a3b827a5d7ab0acd10ab507904c7dad692365b3e3b596eca1afd2
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /wait-shutdown
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 10254
            name: metrics
            protocol: TCP
          - containerPort: 8443
            name: webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 82
            runAsNonRoot: true
            runAsUser: 101
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/certificates/
            name: webhook-cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: nginx-ingress-nginx
        serviceAccountName: nginx-ingress-nginx
        terminationGracePeriodSeconds: 300
        volumes:
        - name: webhook-cert
          secret:
            defaultMode: 420
            secretName: nginx-ingress-nginx-admission
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-07-16T21:58:22Z"
      lastUpdateTime: "2025-07-16T21:58:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-07-16T21:57:52Z"
      lastUpdateTime: "2025-07-16T21:58:22Z"
      message: ReplicaSet "nginx-ingress-nginx-controller-77f69d484c" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
      pod-template-hash: 77f69d484c
    name: nginx-ingress-nginx-controller-77f69d484c
    namespace: ingress-nginx
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-ingress-nginx-controller
      uid: 1a31fcbf-c680-42f3-b39a-edc4dcf2dd42
    resourceVersion: "2527"
    uid: 962b7f24-98c9-4c93-ba8f-f598136a3f3b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: nginx
        app.kubernetes.io/name: ingress-nginx
        pod-template-hash: 77f69d484c
    template:
      metadata:
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/instance: nginx
          app.kubernetes.io/managed-by: Helm
          app.kubernetes.io/name: ingress-nginx
          app.kubernetes.io/part-of: ingress-nginx
          app.kubernetes.io/version: 1.13.0
          helm.sh/chart: ingress-nginx-4.13.0
          pod-template-hash: 77f69d484c
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - /nginx-ingress-controller
          - --publish-service=$(POD_NAMESPACE)/nginx-ingress-nginx-controller
          - --election-id=nginx-ingress-nginx-leader
          - --controller-class=k8s.io/ingress-nginx
          - --ingress-class=nginx
          - --configmap=$(POD_NAMESPACE)/nginx-ingress-nginx-controller
          - --validating-webhook=:8443
          - --validating-webhook-certificate=/usr/local/certificates/cert
          - --validating-webhook-key=/usr/local/certificates/key
          - --enable-metrics=true
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: LD_PRELOAD
            value: /usr/local/lib/libmimalloc.so
          image: registry.k8s.io/ingress-nginx/controller:v1.13.0@sha256:dc75a7baec7a3b827a5d7ab0acd10ab507904c7dad692365b3e3b596eca1afd2
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - /wait-shutdown
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 80
            name: http
            protocol: TCP
          - containerPort: 443
            name: https
            protocol: TCP
          - containerPort: 10254
            name: metrics
            protocol: TCP
          - containerPort: 8443
            name: webhook
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 90Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsGroup: 82
            runAsNonRoot: true
            runAsUser: 101
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /usr/local/certificates/
            name: webhook-cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: nginx-ingress-nginx
        serviceAccountName: nginx-ingress-nginx
        terminationGracePeriodSeconds: 300
        volumes:
        - name: webhook-cert
          secret:
            defaultMode: 420
            secretName: nginx-ingress-nginx-admission
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: v1
  data:
    ca.crt: |
      -----BEGIN CERTIFICATE-----
      MIIDBTCCAe2gAwIBAgIIGyotGFD68mowDQYJKoZIhvcNAQELBQAwFTETMBEGA1UE
      AxMKa3ViZXJuZXRlczAeFw0yNTA3MTYyMTM0MzNaFw0zNTA3MTQyMTM5MzNaMBUx
      EzARBgNVBAMTCmt1YmVybmV0ZXMwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEK
      AoIBAQDZFQMFSQycwxAxy4CqRsKsCilvLR808cUPHYnwHLYC66XXLtdLMVIyQ/VL
      Gihe72wddjDxeQTgoLpRbJhDkD4i8SxnZkoFGZ5PxZDfi5dJa3tNLOIv8tcVeBEh
      gbwcleCojfVjpqPcQ3VYT33Zo005vo7JFi2JQng3Yu04JXWD0KKjqgy7d3pYMEqP
      3+tWTyYtiWljZ4eH7v1vur4vUBdqFbSRuqM0cMNu7twRKOoMkNsjJZfhYWJHK1Cp
      9/6e+1W4I1jDpjPeNNznnoa4kCRUui7ReKZwFoVUQKC20Mb0CD96BAGrFS0gPQ8M
      m1KkbciAeqhUsfS4GbHBeQUeBeMzAgMBAAGjWTBXMA4GA1UdDwEB/wQEAwICpDAP
      BgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBTxgeW6d8T/9NybTHhXPTErt0zm7DAV
      BgNVHREEDjAMggprdWJlcm5ldGVzMA0GCSqGSIb3DQEBCwUAA4IBAQCKI1Z9vNgd
      5i9jrYs1WEDFsqTKMag2MpVl8ibJldEur9MTBTdZ15KlirZDzz6a0koiy4QCpPjK
      GOOF9R4b2c2Pq5aeycRgN5WRkLVycNc8bNSqH+ky2t6kpTH5h1MLSLOPRzEMaIcx
      xXWzcUm60UwiUZd6cviDz8xxodvsvO0FNXpp7rirBezw9jnnT3WemVymVVE0N852
      E5SeUIW9bCUIm2UEiaLqA7F4Yun/dkvrFjTYzykk9GJV9LN2CntwrzaWyN6n3CNC
      mUvNklv7+SMHyDTgkLxq4nWeWamqG6PxlIPc0ZLzaPAVdLylS732mN3Wu6aN5HCN
      8qNbEI8PCId9
      -----END CERTIFICATE-----
  kind: ConfigMap
  metadata:
    annotations:
      kubernetes.io/description: Contains a CA bundle that can be used to verify the
        kube-apiserver when using internal endpoints such as the internal service
        IP or kubernetes.default.svc. No other usage is guaranteed across distributions
        of Kubernetes clusters.
    creationTimestamp: "2025-07-16T21:56:38Z"
    name: kube-root-ca.crt
    namespace: ingress-nginx
    resourceVersion: "2213"
    uid: 61914a13-5385-4d26-a1a5-04a2cce91876
- apiVersion: v1
  kind: ConfigMap
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx-controller
    namespace: ingress-nginx
    resourceVersion: "2375"
    uid: 8f6cf387-938d-4680-818a-b6b559b0e120
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    creationTimestamp: "2025-07-16T21:56:38Z"
    name: default
    namespace: ingress-nginx
    resourceVersion: "2212"
    uid: 693f3a14-3465-45bb-a237-16ecc2d7ef6b
- apiVersion: v1
  automountServiceAccountToken: true
  kind: ServiceAccount
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "2374"
    uid: d6045f77-5886-44cc-a619-af5718661c9f
- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "2378"
    uid: 82577923-4b29-4fc3-8cee-3889de54ec0d
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - configmaps
    - pods
    - secrets
    - endpoints
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses/status
    verbs:
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingressclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - nginx-ingress-nginx-leader
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx
    namespace: ingress-nginx
    resourceVersion: "2379"
    uid: 8993f1f6-cf6a-4fde-9223-61c838011e5c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: nginx-ingress-nginx
  subjects:
  - kind: ServiceAccount
    name: nginx-ingress-nginx
    namespace: ingress-nginx
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-admin: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: admin
    resourceVersion: "123331"
    uid: 4616ff6e-68d5-445d-a2fc-f3f5743483db
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    - issuers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates/status
    verbs:
    - update
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    - orders
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    - issuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    - orders
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - notification.toolkit.fluxcd.io
    - source.toolkit.fluxcd.io
    - helm.toolkit.fluxcd.io
    - image.toolkit.fluxcd.io
    - kustomize.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - notification.toolkit.fluxcd.io
    - source.toolkit.fluxcd.io
    - helm.toolkit.fluxcd.io
    - image.toolkit.fluxcd.io
    - kustomize.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"calico-cni-plugin"},"rules":[{"apiGroups":[""],"resources":["pods","nodes","namespaces"],"verbs":["get"]},{"apiGroups":[""],"resources":["pods/status"],"verbs":["patch"]},{"apiGroups":["crd.projectcalico.org"],"resources":["blockaffinities","ipamblocks","ipamhandles","clusterinformations","ippools","ipreservations","ipamconfigs"],"verbs":["get","list","create","update","delete"]}]}
    creationTimestamp: "2025-07-16T21:45:24Z"
    name: calico-cni-plugin
    resourceVersion: "893"
    uid: 29ecd9fb-2993-4b91-b448-855e6f4953ad
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - nodes
    - namespaces
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - blockaffinities
    - ipamblocks
    - ipamhandles
    - clusterinformations
    - ippools
    - ipreservations
    - ipamconfigs
    verbs:
    - get
    - list
    - create
    - update
    - delete
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"calico-kube-controllers"},"rules":[{"apiGroups":[""],"resources":["nodes"],"verbs":["watch","list","get"]},{"apiGroups":[""],"resources":["pods"],"verbs":["get","list","watch"]},{"apiGroups":["crd.projectcalico.org"],"resources":["ipreservations"],"verbs":["list"]},{"apiGroups":["crd.projectcalico.org"],"resources":["blockaffinities","ipamblocks","ipamhandles"],"verbs":["get","list","create","update","delete","watch"]},{"apiGroups":["crd.projectcalico.org"],"resources":["ippools"],"verbs":["list","watch"]},{"apiGroups":["crd.projectcalico.org"],"resources":["hostendpoints"],"verbs":["get","list","create","update","delete"]},{"apiGroups":["crd.projectcalico.org"],"resources":["clusterinformations"],"verbs":["get","list","create","update","watch"]},{"apiGroups":["crd.projectcalico.org"],"resources":["kubecontrollersconfigurations"],"verbs":["get","create","update","watch"]}]}
    creationTimestamp: "2025-07-16T21:45:24Z"
    name: calico-kube-controllers
    resourceVersion: "889"
    uid: b779581b-96e4-4b21-afb6-4cf729a252f1
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - ipreservations
    verbs:
    - list
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - blockaffinities
    - ipamblocks
    - ipamhandles
    verbs:
    - get
    - list
    - create
    - update
    - delete
    - watch
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - ippools
    verbs:
    - list
    - watch
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - hostendpoints
    verbs:
    - get
    - list
    - create
    - update
    - delete
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - clusterinformations
    verbs:
    - get
    - list
    - create
    - update
    - watch
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - kubecontrollersconfigurations
    verbs:
    - get
    - create
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"name":"calico-node"},"rules":[{"apiGroups":[""],"resourceNames":["calico-cni-plugin"],"resources":["serviceaccounts/token"],"verbs":["create"]},{"apiGroups":[""],"resources":["pods","nodes","namespaces"],"verbs":["get"]},{"apiGroups":["discovery.k8s.io"],"resources":["endpointslices"],"verbs":["watch","list"]},{"apiGroups":[""],"resources":["endpoints","services"],"verbs":["watch","list","get"]},{"apiGroups":[""],"resources":["configmaps"],"verbs":["get"]},{"apiGroups":[""],"resources":["nodes/status"],"verbs":["patch","update"]},{"apiGroups":["networking.k8s.io"],"resources":["networkpolicies"],"verbs":["watch","list"]},{"apiGroups":[""],"resources":["pods","namespaces","serviceaccounts"],"verbs":["list","watch"]},{"apiGroups":[""],"resources":["pods/status"],"verbs":["patch"]},{"apiGroups":["crd.projectcalico.org"],"resources":["globalfelixconfigs","felixconfigurations","bgppeers","bgpfilters","globalbgpconfigs","bgpconfigurations","ippools","ipreservations","ipamblocks","globalnetworkpolicies","globalnetworksets","networkpolicies","networksets","clusterinformations","hostendpoints","blockaffinities","caliconodestatuses"],"verbs":["get","list","watch"]},{"apiGroups":["crd.projectcalico.org"],"resources":["ippools","felixconfigurations","clusterinformations"],"verbs":["create","update"]},{"apiGroups":["crd.projectcalico.org"],"resources":["caliconodestatuses"],"verbs":["update"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["get","list","watch"]},{"apiGroups":["crd.projectcalico.org"],"resources":["bgpconfigurations","bgppeers"],"verbs":["create","update"]},{"apiGroups":["crd.projectcalico.org"],"resources":["blockaffinities","ipamblocks","ipamhandles"],"verbs":["get","list","create","update","delete"]},{"apiGroups":["crd.projectcalico.org"],"resources":["ipamconfigs"],"verbs":["get","create"]},{"apiGroups":["crd.projectcalico.org"],"resources":["blockaffinities"],"verbs":["watch"]},{"apiGroups":["apps"],"resources":["daemonsets"],"verbs":["get"]}]}
    creationTimestamp: "2025-07-16T21:45:24Z"
    name: calico-node
    resourceVersion: "891"
    uid: 60278163-06b3-433a-ba2e-4dd2fca9325d
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - calico-cni-plugin
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - pods
    - nodes
    - namespaces
    verbs:
    - get
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - watch
    - list
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - watch
    - list
    - get
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - watch
    - list
  - apiGroups:
    - ""
    resources:
    - pods
    - namespaces
    - serviceaccounts
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - globalfelixconfigs
    - felixconfigurations
    - bgppeers
    - bgpfilters
    - globalbgpconfigs
    - bgpconfigurations
    - ippools
    - ipreservations
    - ipamblocks
    - globalnetworkpolicies
    - globalnetworksets
    - networkpolicies
    - networksets
    - clusterinformations
    - hostendpoints
    - blockaffinities
    - caliconodestatuses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - ippools
    - felixconfigurations
    - clusterinformations
    verbs:
    - create
    - update
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - caliconodestatuses
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - bgpconfigurations
    - bgppeers
    verbs:
    - create
    - update
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - blockaffinities
    - ipamblocks
    - ipamhandles
    verbs:
    - get
    - list
    - create
    - update
    - delete
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - ipamconfigs
    verbs:
    - get
    - create
  - apiGroups:
    - crd.projectcalico.org
    resources:
    - blockaffinities
    verbs:
    - watch
  - apiGroups:
    - apps
    resources:
    - daemonsets
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-cainjector
    resourceVersion: "4489"
    uid: b47fbc8e-a19c-44a0-8787-b893f6847474
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - get
    - create
    - update
    - patch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingwebhookconfigurations
    - mutatingwebhookconfigurations
    verbs:
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - apiregistration.k8s.io
    resources:
    - apiservices
    verbs:
    - get
    - list
    - watch
    - update
    - patch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
    - list
    - watch
    - update
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
      rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
    name: cert-manager-cluster-view
    resourceVersion: "4494"
    uid: 0e883ce2-1227-4738-a88a-0237e5dd6450
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - clusterissuers
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-approve:cert-manager-io
    resourceVersion: "4501"
    uid: 3092ddd8-ff41-42c0-a03c-bebc9e27130c
  rules:
  - apiGroups:
    - cert-manager.io
    resourceNames:
    - issuers.cert-manager.io/*
    - clusterissuers.cert-manager.io/*
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-certificates
    resourceVersion: "4497"
    uid: 0aace0e9-ab40-45bb-85b7-283df07b50e8
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificates/status
    - certificaterequests
    - certificaterequests/status
    verbs:
    - update
    - patch
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    - clusterissuers
    - issuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates/finalizers
    - certificaterequests/finalizers
    verbs:
    - update
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - orders
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - delete
    - patch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-certificatesigningrequests
    resourceVersion: "4490"
    uid: 55188057-29fd-4da3-b6f5-85d6add5ac6f
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - get
    - list
    - watch
    - update
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/status
    verbs:
    - update
    - patch
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - issuers.cert-manager.io/*
    - clusterissuers.cert-manager.io/*
    resources:
    - signers
    verbs:
    - sign
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-challenges
    resourceVersion: "4502"
    uid: a5aa182b-3964-4bf2-802a-5952e825731c
  rules:
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    - challenges/status
    verbs:
    - update
    - patch
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cert-manager.io
    resources:
    - issuers
    - clusterissuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - ""
    resources:
    - pods
    - services
    verbs:
    - get
    - list
    - watch
    - create
    - delete
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - update
  - apiGroups:
    - gateway.networking.k8s.io
    resources:
    - httproutes
    verbs:
    - get
    - list
    - watch
    - create
    - delete
    - update
  - apiGroups:
    - route.openshift.io
    resources:
    - routes/custom-host
    verbs:
    - create
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-clusterissuers
    resourceVersion: "4496"
    uid: ccfdca92-9a06-4fb2-8179-19fbbf4bc662
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - clusterissuers
    - clusterissuers/status
    verbs:
    - update
    - patch
  - apiGroups:
    - cert-manager.io
    resources:
    - clusterissuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - delete
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-ingress-shim
    resourceVersion: "4493"
    uid: 98ee95c3-ad9e-4b22-9c28-0bebfbf8db84
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    verbs:
    - create
    - update
    - delete
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    - issuers
    - clusterissuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses/finalizers
    verbs:
    - update
  - apiGroups:
    - gateway.networking.k8s.io
    resources:
    - gateways
    - httproutes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - gateway.networking.k8s.io
    resources:
    - gateways/finalizers
    - httproutes/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-issuers
    resourceVersion: "4491"
    uid: d7e41287-3b45-49c1-acaa-89d39037b8e7
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - issuers
    - issuers/status
    verbs:
    - update
    - patch
  - apiGroups:
    - cert-manager.io
    resources:
    - issuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - delete
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-orders
    resourceVersion: "4500"
    uid: 3edf8342-a2c9-41a9-924b-23a7b0ac5911
  rules:
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - orders
    - orders/status
    verbs:
    - update
    - patch
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - orders
    - challenges
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - cert-manager.io
    resources:
    - clusterissuers
    - issuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    verbs:
    - create
    - delete
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - orders/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: cert-manager-edit
    resourceVersion: "4492"
    uid: e71c679f-6709-4241-8a6f-01c3d5cdee6d
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    - issuers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates/status
    verbs:
    - update
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    - orders
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
      rbac.authorization.k8s.io/aggregate-to-cluster-reader: "true"
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    name: cert-manager-view
    resourceVersion: "4495"
    uid: d3a3bcff-cd2d-4ea3-9c4b-be93d75759bc
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    - issuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    - orders
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-webhook:subjectaccessreviews
    resourceVersion: "4488"
    uid: 91a1ad10-5659-4858-8ec7-7ae1070f6059
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: cluster-admin
    resourceVersion: "72"
    uid: f7ea61ea-6b78-4af5-a3c5-38958d0fc66a
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2025-07-17T16:45:49Z"
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: crd-controller-flux-system
    resourceVersion: "123535"
    uid: e1f1eb29-d9b2-4a82-839a-4d46b022f533
  rules:
  - apiGroups:
    - source.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - kustomize.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - helm.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - notification.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - image.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - '*'
  - apiGroups:
    - ""
    resources:
    - namespaces
    - secrets
    - configmaps
    - serviceaccounts
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps/status
    verbs:
    - get
    - update
    - patch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - get
    - list
    - watch
    - create
    - update
    - patch
    - delete
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - nonResourceURLs:
    - /livez/ping
    verbs:
    - head
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-edit: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: edit
    resourceVersion: "123327"
    uid: 60a1b179-bed1-48c4-9ad1-fc488e19b892
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    - issuers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates/status
    verbs:
    - update
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    - orders
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    - issuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    - orders
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - notification.toolkit.fluxcd.io
    - source.toolkit.fluxcd.io
    - helm.toolkit.fluxcd.io
    - image.toolkit.fluxcd.io
    - kustomize.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - notification.toolkit.fluxcd.io
    - source.toolkit.fluxcd.io
    - helm.toolkit.fluxcd.io
    - image.toolkit.fluxcd.io
    - kustomize.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2025-07-17T16:45:49Z"
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: flux-edit-flux-system
    resourceVersion: "123536"
    uid: f8bf7b79-72a6-4f24-bdcb-58082afdbb0a
  rules:
  - apiGroups:
    - notification.toolkit.fluxcd.io
    - source.toolkit.fluxcd.io
    - helm.toolkit.fluxcd.io
    - image.toolkit.fluxcd.io
    - kustomize.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2025-07-17T16:45:49Z"
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    name: flux-view-flux-system
    resourceVersion: "123537"
    uid: 744a6ae9-49e3-42ba-9be7-ea719ea15cf6
  rules:
  - apiGroups:
    - notification.toolkit.fluxcd.io
    - source.toolkit.fluxcd.io
    - helm.toolkit.fluxcd.io
    - image.toolkit.fluxcd.io
    - kustomize.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:40Z"
    labels:
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 12.0.2
      helm.sh/chart: grafana-9.2.10
    name: kube-prom-grafana-clusterrole
    resourceVersion: "9263"
    uid: ee00c2b4-a1b9-402a-9657-43bb705a71af
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - get
    - watch
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:40Z"
    labels:
      app: kube-prometheus-stack-operator
      app.kubernetes.io/component: prometheus-operator
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus-stack-prometheus-operator
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 75.11.0
      chart: kube-prometheus-stack-75.11.0
      heritage: Helm
      release: kube-prom
    name: kube-prom-kube-prometheus-operator
    resourceVersion: "9265"
    uid: f721d3a8-a0af-40c8-afc7-c03e8db7f795
  rules:
  - apiGroups:
    - monitoring.coreos.com
    resources:
    - alertmanagers
    - alertmanagers/finalizers
    - alertmanagers/status
    - alertmanagerconfigs
    - prometheuses
    - prometheuses/finalizers
    - prometheuses/status
    - prometheusagents
    - prometheusagents/finalizers
    - prometheusagents/status
    - thanosrulers
    - thanosrulers/finalizers
    - thanosrulers/status
    - scrapeconfigs
    - servicemonitors
    - podmonitors
    - probes
    - prometheusrules
    verbs:
    - '*'
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - '*'
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - '*'
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - delete
  - apiGroups:
    - ""
    resources:
    - services
    - services/finalizers
    - endpoints
    verbs:
    - get
    - create
    - update
    - delete
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - patch
    - create
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - create
    - list
    - watch
    - update
    - delete
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:40Z"
    labels:
      app: kube-prometheus-stack-prometheus
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 75.11.0
      chart: kube-prometheus-stack-75.11.0
      heritage: Helm
      release: kube-prom
    name: kube-prom-kube-prometheus-prometheus
    resourceVersion: "9266"
    uid: 49cd673e-b2c9-4981-88e8-edfdfb870ed4
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    - nodes/metrics
    - services
    - endpoints
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - nonResourceURLs:
    - /metrics
    - /metrics/cadvisor
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:40Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.16.0
      helm.sh/chart: kube-state-metrics-6.1.0
      release: kube-prom
    name: kube-prom-kube-state-metrics
    resourceVersion: "9264"
    uid: 487c46a4-d835-42db-a506-17102d93b458
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - daemonsets
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - limitranges
    verbs:
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - mutatingwebhookconfigurations
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - networkpolicies
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - replicasets
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - resourcequotas
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingwebhookconfigurations
    verbs:
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2025-07-16T21:39:42Z"
    name: kubeadm:get-nodes
    resourceVersion: "258"
    uid: d05e6439-3cb4-4964-bc43-63f456e59ffc
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"app":"metallb"},"name":"metallb-system:controller"},"rules":[{"apiGroups":[""],"resources":["services","namespaces"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["nodes"],"verbs":["list"]},{"apiGroups":[""],"resources":["services/status"],"verbs":["update"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]},{"apiGroups":["policy"],"resourceNames":["controller"],"resources":["podsecuritypolicies"],"verbs":["use"]},{"apiGroups":["admissionregistration.k8s.io"],"resourceNames":["metallb-webhook-configuration"],"resources":["validatingwebhookconfigurations","mutatingwebhookconfigurations"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["admissionregistration.k8s.io"],"resources":["validatingwebhookconfigurations","mutatingwebhookconfigurations"],"verbs":["list","watch"]},{"apiGroups":["apiextensions.k8s.io"],"resourceNames":["addresspools.metallb.io","bfdprofiles.metallb.io","bgpadvertisements.metallb.io","bgppeers.metallb.io","ipaddresspools.metallb.io","l2advertisements.metallb.io","communities.metallb.io"],"resources":["customresourcedefinitions"],"verbs":["create","delete","get","list","patch","update","watch"]},{"apiGroups":["apiextensions.k8s.io"],"resources":["customresourcedefinitions"],"verbs":["list","watch"]}]}
    creationTimestamp: "2025-07-16T21:54:50Z"
    labels:
      app: metallb
    name: metallb-system:controller
    resourceVersion: "1943"
    uid: 097d679d-e46b-492c-b5b8-b5d49917726a
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - policy
    resourceNames:
    - controller
    resources:
    - podsecuritypolicies
    verbs:
    - use
  - apiGroups:
    - admissionregistration.k8s.io
    resourceNames:
    - metallb-webhook-configuration
    resources:
    - validatingwebhookconfigurations
    - mutatingwebhookconfigurations
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingwebhookconfigurations
    - mutatingwebhookconfigurations
    verbs:
    - list
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resourceNames:
    - addresspools.metallb.io
    - bfdprofiles.metallb.io
    - bgpadvertisements.metallb.io
    - bgppeers.metallb.io
    - ipaddresspools.metallb.io
    - l2advertisements.metallb.io
    - communities.metallb.io
    resources:
    - customresourcedefinitions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRole","metadata":{"annotations":{},"labels":{"app":"metallb"},"name":"metallb-system:speaker"},"rules":[{"apiGroups":[""],"resources":["services","endpoints","nodes","namespaces"],"verbs":["get","list","watch"]},{"apiGroups":["discovery.k8s.io"],"resources":["endpointslices"],"verbs":["get","list","watch"]},{"apiGroups":[""],"resources":["events"],"verbs":["create","patch"]},{"apiGroups":["policy"],"resourceNames":["speaker"],"resources":["podsecuritypolicies"],"verbs":["use"]}]}
    creationTimestamp: "2025-07-16T21:54:50Z"
    labels:
      app: metallb
    name: metallb-system:speaker
    resourceVersion: "1944"
    uid: a42dc842-67c9-450e-bdc7-10063e4694ee
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    - endpoints
    - nodes
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - policy
    resourceNames:
    - speaker
    resources:
    - podsecuritypolicies
    verbs:
    - use
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: namecheap-webhook
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:28:54Z"
    labels:
      app: cert-manager-webhook-namecheap
      app.kubernetes.io/managed-by: Helm
      chart: cert-manager-webhook-namecheap-0.2.2
      heritage: Helm
      release: namecheap-webhook
    name: namecheap-webhook-cert-manager-webhook-namecheap
    resourceVersion: "5815"
    uid: 950ed1c6-8635-4b82-b75f-997143793f71
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - flowcontrol.apiserver.k8s.io
    resources:
    - flowschemas
    - prioritylevelconfigurations
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: namecheap-webhook
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:28:54Z"
    labels:
      app: cert-manager-webhook-namecheap
      app.kubernetes.io/managed-by: Helm
      chart: cert-manager-webhook-namecheap-0.2.2
      heritage: Helm
      release: namecheap-webhook
    name: namecheap-webhook-cert-manager-webhook-namecheap:domain-solver
    resourceVersion: "5816"
    uid: c1251e98-734a-40fd-aac9-98fc8f891471
  rules:
  - apiGroups:
    - acme.sleepy-puppy.com
    resources:
    - '*'
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    labels:
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx
    resourceVersion: "2376"
    uid: d5f2c87e-17ac-49c0-9027-50aa5c510c43
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - nodes
    - pods
    - secrets
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses/status
    verbs:
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingressclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-admin: "true"
    name: system:aggregate-to-admin
    resourceVersion: "80"
    uid: 28afe326-672d-4cd1-b275-b2b67a79dd95
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - rolebindings
    - roles
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: system:aggregate-to-edit
    resourceVersion: "81"
    uid: 4cbf3f5c-4c5e-458f-b018-c403fbbb41f1
  rules:
  - apiGroups:
    - ""
    resources:
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    - secrets
    - services/proxy
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - impersonate
  - apiGroups:
    - ""
    resources:
    - pods
    - pods/attach
    - pods/exec
    - pods/portforward
    - pods/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - events
    - persistentvolumeclaims
    - replicationcontrollers
    - replicationcontrollers/scale
    - secrets
    - serviceaccounts
    - services
    - services/proxy
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - replicasets
    - replicasets/scale
    - statefulsets
    - statefulsets/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - jobs
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - deployments
    - deployments/rollback
    - deployments/scale
    - ingresses
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicationcontrollers/scale
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - networkpolicies
    verbs:
    - create
    - delete
    - deletecollection
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - deletecollection
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-view: "true"
    name: system:aggregate-to-view
    resourceVersion: "82"
    uid: 0886184c-d5b6-463a-8b3a-bc4fcd4aea25
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:auth-delegator
    resourceVersion: "88"
    uid: a398c4fb-9c03-47f9-9e47-ef0208d397a1
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:basic-user
    resourceVersion: "75"
    uid: c866e4d4-b351-480c-b720-e8c29d8f7bd9
  rules:
  - apiGroups:
    - authorization.k8s.io
    resources:
    - selfsubjectaccessreviews
    - selfsubjectrulesreviews
    verbs:
    - create
  - apiGroups:
    - authentication.k8s.io
    resources:
    - selfsubjectreviews
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
    resourceVersion: "93"
    uid: ce13bec1-ce3c-4063-994b-a345b0684486
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/nodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
    resourceVersion: "94"
    uid: 08ba14da-9a0a-4739-9ab1-173f9af99422
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/selfnodeclient
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kube-apiserver-client-approver
    resourceVersion: "98"
    uid: 0a6b28a2-5153-4633-aaf1-9633685fd7af
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kube-apiserver-client-kubelet-approver
    resourceVersion: "99"
    uid: 82e7bdbe-35db-4f46-90d7-2b4e6be3f6af
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:kubelet-serving-approver
    resourceVersion: "97"
    uid: 994bb48f-23c8-4b2e-877a-225f60144757
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kubelet-serving
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:certificates.k8s.io:legacy-unknown-approver
    resourceVersion: "96"
    uid: be818db9-a695-43dd-af40-974e2641b2ba
  rules:
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - approve
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:attachdetach-controller
    resourceVersion: "104"
    uid: 88611a9c-e69b-4125-968c-f1ea38cf8261
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:certificate-controller
    resourceVersion: "130"
    uid: 7d313b84-e3c5-47f6-9cfa-ea4fe72fddf9
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests/approval
    - certificatesigningrequests/status
    verbs:
    - update
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client-kubelet
    resources:
    - signers
    verbs:
    - approve
  - apiGroups:
    - certificates.k8s.io
    resourceNames:
    - kubernetes.io/kube-apiserver-client
    - kubernetes.io/kube-apiserver-client-kubelet
    - kubernetes.io/kubelet-serving
    - kubernetes.io/legacy-unknown
    resources:
    - signers
    verbs:
    - sign
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "105"
    uid: 19f6360d-1626-462f-941b-71a7ac249427
  rules:
  - apiGroups:
    - rbac.authorization.k8s.io
    resources:
    - clusterroles
    verbs:
    - escalate
    - get
    - list
    - patch
    - update
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cronjob-controller
    resourceVersion: "106"
    uid: 7ba53ee6-6091-4681-acda-c723085a0931
  rules:
  - apiGroups:
    - batch
    resources:
    - cronjobs
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - cronjobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:daemon-set-controller
    resourceVersion: "107"
    uid: c38262b5-0de5-4574-8657-19e543080e3a
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - daemonsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:deployment-controller
    resourceVersion: "108"
    uid: 26e99c4d-93ce-4d09-b936-ed0ae4f9a9bc
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments/finalizers
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:disruption-controller
    resourceVersion: "109"
    uid: bd3521b2-089e-4cc6-be2b-2ce7e7d932ac
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpoint-controller
    resourceVersion: "110"
    uid: 22d0e78f-6013-46fb-9651-740b09f32fec
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/restricted
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslice-controller
    resourceVersion: "111"
    uid: 71109f44-c445-4886-bceb-ab3473c7a054
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    - pods
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "112"
    uid: 8bb3c2c6-95ae-40a9-a625-6bab88764c9b
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - endpoints/finalizers
    verbs:
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - create
    - delete
    - get
    - list
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "114"
    uid: 0f72e889-771f-4599-b266-203b2d1e434c
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:expand-controller
    resourceVersion: "113"
    uid: f7c3a2eb-d79b-4e41-b252-6c0fc2a418ef
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:generic-garbage-collector
    resourceVersion: "115"
    uid: 8bdb7ca9-f126-4b9c-b28f-96805a9bd468
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "116"
    uid: ab9b3481-1b08-481e-b16b-d69b0f206ff4
  rules:
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*/scale'
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - metrics.k8s.io
    resources:
    - pods
    verbs:
    - list
  - apiGroups:
    - custom.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - external.metrics.k8s.io
    resources:
    - '*'
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:job-controller
    resourceVersion: "117"
    uid: 91cbfdf1-51e2-43ad-a049-4fda75e491f7
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - batch
    resources:
    - jobs/status
    verbs:
    - update
  - apiGroups:
    - batch
    resources:
    - jobs/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:legacy-service-account-token-cleaner
    resourceVersion: "136"
    uid: be93bf82-9f07-4dcf-ae8c-31eacfb405a7
  rules:
  - apiGroups:
    - ""
    resourceNames:
    - kube-apiserver-legacy-service-account-token-tracking
    resources:
    - configmaps
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:namespace-controller
    resourceVersion: "118"
    uid: 8006c49c-dab3-4ed3-8a58-299515478267
  rules:
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces/finalize
    - namespaces/status
    verbs:
    - update
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - delete
    - deletecollection
    - get
    - list
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:node-controller
    resourceVersion: "119"
    uid: 21364fb6-85fd-4a8b-ad94-475a15da6b58
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - delete
    - get
    - list
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:persistent-volume-binder
    resourceVersion: "120"
    uid: f6f1d92d-7a2e-4178-818b-b2337a74ddfd
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumes/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - create
    - delete
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - create
    - delete
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pod-garbage-collector
    resourceVersion: "121"
    uid: 8dfb2fa0-82d2-40d9-a646-cb862a713c7b
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pv-protection-controller
    resourceVersion: "132"
    uid: 906d7d48-fa24-48e4-bea7-d1100cfa31e7
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pvc-protection-controller
    resourceVersion: "131"
    uid: 9403252d-7271-4781-a498-5e7a639d87d7
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replicaset-controller
    resourceVersion: "122"
    uid: 14ea8a5c-24fc-46e9-b3c3-d7553abba77e
  rules:
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/status
    verbs:
    - update
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replication-controller
    resourceVersion: "123"
    uid: 8bb75faf-0349-4009-b7d7-a78c9ef1c30e
  rules:
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/status
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - list
    - patch
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:resourcequota-controller
    resourceVersion: "124"
    uid: cfacb068-19ca-49a5-8ab9-5caf62c8b049
  rules:
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - resourcequotas/status
    verbs:
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "134"
    uid: 356d2b14-3692-4b84-9c04-2eaf059f72b8
  rules:
  - apiGroups:
    - ""
    resources:
    - configmaps
    verbs:
    - create
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:route-controller
    resourceVersion: "125"
    uid: 4863640e-9a44-49f8-8a69-3e63aa259433
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-account-controller
    resourceVersion: "126"
    uid: ad9db485-fca1-4a50-bef7-3418d78ad0ce
  rules:
  - apiGroups:
    - ""
    resources:
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-controller
    resourceVersion: "127"
    uid: 05ab6512-7cf6-40ce-b3f7-35de3a088398
  rules:
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - services/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:statefulset-controller
    resourceVersion: "128"
    uid: 734882b5-ad24-4a83-9172-085960121942
  rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets/status
    verbs:
    - update
  - apiGroups:
    - apps
    resources:
    - statefulsets/finalizers
    verbs:
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - delete
    - update
  - apiGroups:
    - ""
    resources:
    - pods/finalizers
    verbs:
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "133"
    uid: 034cb264-9774-4c82-8ccb-604306fc66de
  rules:
  - apiGroups:
    - batch
    resources:
    - jobs
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-controller
    resourceVersion: "129"
    uid: 27ed2aca-3acd-487e-b301-1c78c5b0e812
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:validatingadmissionpolicy-status-controller
    resourceVersion: "135"
    uid: a9b63e72-94a2-4db1-ab9a-ab9049646944
  rules:
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingadmissionpolicies
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - admissionregistration.k8s.io
    resources:
    - validatingadmissionpolicies/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: "2025-07-16T21:39:42Z"
    name: system:coredns
    resourceVersion: "267"
    uid: d39b9468-68f2-4e6e-bbc2-c292e17f9d34
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    - pods
    - namespaces
    verbs:
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:discovery
    resourceVersion: "73"
    uid: 0aaca64e-3d0c-4529-87fa-8aafb268e6d6
  rules:
  - nonResourceURLs:
    - /api
    - /api/*
    - /apis
    - /apis/*
    - /healthz
    - /livez
    - /openapi
    - /openapi/*
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:heapster
    resourceVersion: "83"
    uid: cd675a62-792f-4620-bb7e-27bc01643cec
  rules:
  - apiGroups:
    - ""
    resources:
    - events
    - namespaces
    - nodes
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - deployments
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-aggregator
    resourceVersion: "89"
    uid: 65ca80a4-bdeb-460d-b6d5-e9d963245a62
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-controller-manager
    resourceVersion: "90"
    uid: 572ca422-fbf1-4543-8a95-27495ac07682
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-controller-manager
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - secrets
    verbs:
    - delete
  - apiGroups:
    - ""
    resources:
    - configmaps
    - namespaces
    - secrets
    - serviceaccounts
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - secrets
    - serviceaccounts
    verbs:
    - update
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-dns
    resourceVersion: "91"
    uid: 2a825d86-7cb0-4c78-94ad-956f8dc5af52
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-scheduler
    resourceVersion: "103"
    uid: 1b94f0c0-335b-40d3-abb0-2d7b13adb1cc
  rules:
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
  - apiGroups:
    - coordination.k8s.io
    resourceNames:
    - kube-scheduler
    resources:
    - leases
    verbs:
    - get
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - pods/binding
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - replicationcontrollers
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    - extensions
    resources:
    - replicasets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - statefulsets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csistoragecapacities
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kubelet-api-admin
    resourceVersion: "86"
    uid: 81f2960e-9dcf-4fdc-b55d-96a8e4d95abc
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - proxy
  - apiGroups:
    - ""
    resources:
    - nodes/log
    - nodes/metrics
    - nodes/proxy
    - nodes/stats
    verbs:
    - '*'
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:monitoring
    resourceVersion: "74"
    uid: d139ba46-e045-4268-8340-2498117da48a
  rules:
  - nonResourceURLs:
    - /healthz
    - /healthz/*
    - /livez
    - /livez/*
    - /metrics
    - /metrics/slis
    - /readyz
    - /readyz/*
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node
    resourceVersion: "84"
    uid: f40cd725-dc34-4176-b1a7-8fc5d5752aac
  rules:
  - apiGroups:
    - authentication.k8s.io
    resources:
    - tokenreviews
    verbs:
    - create
  - apiGroups:
    - authorization.k8s.io
    resources:
    - localsubjectaccessreviews
    - subjectaccessreviews
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - services
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - create
    - delete
  - apiGroups:
    - ""
    resources:
    - pods/status
    verbs:
    - patch
    - update
  - apiGroups:
    - ""
    resources:
    - pods/eviction
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - configmaps
    - secrets
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    - persistentvolumes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - endpoints
    verbs:
    - get
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
  - apiGroups:
    - coordination.k8s.io
    resources:
    - leases
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - volumeattachments
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - serviceaccounts/token
    verbs:
    - create
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims/status
    verbs:
    - get
    - patch
    - update
  - apiGroups:
    - storage.k8s.io
    resources:
    - csidrivers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - csinodes
    verbs:
    - create
    - delete
    - get
    - patch
    - update
  - apiGroups:
    - node.k8s.io
    resources:
    - runtimeclasses
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-bootstrapper
    resourceVersion: "87"
    uid: 07a06e2f-fa9b-4aad-ad0d-0829687fe46e
  rules:
  - apiGroups:
    - certificates.k8s.io
    resources:
    - certificatesigningrequests
    verbs:
    - create
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-problem-detector
    resourceVersion: "85"
    uid: 39389caf-1b2f-4cbc-8524-1f150c7b944d
  rules:
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
  - apiGroups:
    - ""
    resources:
    - nodes/status
    verbs:
    - patch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-proxier
    resourceVersion: "102"
    uid: 2777d7c2-e5b3-4eda-a969-216c0652cbf5
  rules:
  - apiGroups:
    - ""
    resources:
    - endpoints
    - services
    verbs:
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - nodes
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:persistent-volume-provisioner
    resourceVersion: "92"
    uid: 47abe3aa-18ad-4836-a0b6-1d304ceebad6
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - create
    - delete
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - events
    verbs:
    - watch
  - apiGroups:
    - ""
    - events.k8s.io
    resources:
    - events
    verbs:
    - create
    - patch
    - update
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:public-info-viewer
    resourceVersion: "76"
    uid: e49f9c0e-537e-4b69-b29c-2602a8ca11c8
  rules:
  - nonResourceURLs:
    - /healthz
    - /livez
    - /readyz
    - /version
    - /version/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:service-account-issuer-discovery
    resourceVersion: "101"
    uid: 70fc3764-0b45-4392-abd6-50a170d1b348
  rules:
  - nonResourceURLs:
    - /.well-known/openid-configuration
    - /.well-known/openid-configuration/
    - /openid/v1/jwks
    - /openid/v1/jwks/
    verbs:
    - get
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:volume-scheduler
    resourceVersion: "95"
    uid: b136bb64-8e02-4ea9-b996-de9d9e0abddb
  rules:
  - apiGroups:
    - ""
    resources:
    - persistentvolumes
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - storage.k8s.io
    resources:
    - storageclasses
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - persistentvolumeclaims
    verbs:
    - get
    - list
    - patch
    - update
    - watch
- aggregationRule:
    clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
  apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:40Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
      rbac.authorization.k8s.io/aggregate-to-edit: "true"
    name: view
    resourceVersion: "123323"
    uid: 8f6cb582-1bbb-4ef4-808c-d079814e8cf5
  rules:
  - apiGroups:
    - cert-manager.io
    resources:
    - certificates
    - certificaterequests
    - issuers
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - acme.cert-manager.io
    resources:
    - challenges
    - orders
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - notification.toolkit.fluxcd.io
    - source.toolkit.fluxcd.io
    - helm.toolkit.fluxcd.io
    - image.toolkit.fluxcd.io
    - kustomize.toolkit.fluxcd.io
    resources:
    - '*'
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - configmaps
    - endpoints
    - persistentvolumeclaims
    - persistentvolumeclaims/status
    - pods
    - replicationcontrollers
    - replicationcontrollers/scale
    - serviceaccounts
    - services
    - services/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - bindings
    - events
    - limitranges
    - namespaces/status
    - pods/log
    - pods/status
    - replicationcontrollers/status
    - resourcequotas
    - resourcequotas/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - discovery.k8s.io
    resources:
    - endpointslices
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - apps
    resources:
    - controllerrevisions
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - replicasets
    - replicasets/scale
    - replicasets/status
    - statefulsets
    - statefulsets/scale
    - statefulsets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - autoscaling
    resources:
    - horizontalpodautoscalers
    - horizontalpodautoscalers/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - batch
    resources:
    - cronjobs
    - cronjobs/status
    - jobs
    - jobs/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - extensions
    resources:
    - daemonsets
    - daemonsets/status
    - deployments
    - deployments/scale
    - deployments/status
    - ingresses
    - ingresses/status
    - networkpolicies
    - replicasets
    - replicasets/scale
    - replicasets/status
    - replicationcontrollers/scale
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - policy
    resources:
    - poddisruptionbudgets
    - poddisruptionbudgets/status
    verbs:
    - get
    - list
    - watch
  - apiGroups:
    - networking.k8s.io
    resources:
    - ingresses
    - ingresses/status
    - networkpolicies
    verbs:
    - get
    - list
    - watch
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"calico-cni-plugin"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"calico-cni-plugin"},"subjects":[{"kind":"ServiceAccount","name":"calico-cni-plugin","namespace":"kube-system"}]}
    creationTimestamp: "2025-07-16T21:45:25Z"
    name: calico-cni-plugin
    resourceVersion: "897"
    uid: c550a097-afdc-4c8e-adda-61e88a23d12a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: calico-cni-plugin
  subjects:
  - kind: ServiceAccount
    name: calico-cni-plugin
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"calico-kube-controllers"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"calico-kube-controllers"},"subjects":[{"kind":"ServiceAccount","name":"calico-kube-controllers","namespace":"kube-system"}]}
    creationTimestamp: "2025-07-16T21:45:25Z"
    name: calico-kube-controllers
    resourceVersion: "895"
    uid: b97381fc-b505-46d6-b72a-91c38eba3b93
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: calico-kube-controllers
  subjects:
  - kind: ServiceAccount
    name: calico-kube-controllers
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"name":"calico-node"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"calico-node"},"subjects":[{"kind":"ServiceAccount","name":"calico-node","namespace":"kube-system"}]}
    creationTimestamp: "2025-07-16T21:45:25Z"
    name: calico-node
    resourceVersion: "896"
    uid: 2fcbeddd-6df8-4482-9621-2bc80e0ec28c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: calico-node
  subjects:
  - kind: ServiceAccount
    name: calico-node
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cainjector
      app.kubernetes.io/component: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-cainjector
    resourceVersion: "4506"
    uid: 1ac45f15-8603-4493-a51f-9182d6bc0ebb
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-cainjector
  subjects:
  - kind: ServiceAccount
    name: cert-manager-cainjector
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-approve:cert-manager-io
    resourceVersion: "4514"
    uid: ce04ade6-e848-4a6e-906c-a299cfb8a40e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-controller-approve:cert-manager-io
  subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-certificates
    resourceVersion: "4510"
    uid: a7334b05-f06d-4bef-967c-6e29736a9465
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-controller-certificates
  subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-certificatesigningrequests
    resourceVersion: "4516"
    uid: 21f7d03f-0f22-4b50-8cfc-e2aa1c4a0992
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-controller-certificatesigningrequests
  subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-challenges
    resourceVersion: "4512"
    uid: 41ac4ca0-a5da-4600-8895-2b6d78d3bd38
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-controller-challenges
  subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-clusterissuers
    resourceVersion: "4508"
    uid: 29dc9b2f-5a9e-4058-bdb9-9846d5db2123
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-controller-clusterissuers
  subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-ingress-shim
    resourceVersion: "4513"
    uid: d40ba28d-41fc-4c68-9068-164df596ae70
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-controller-ingress-shim
  subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-issuers
    resourceVersion: "4507"
    uid: 61ce4181-846b-4125-bfdd-b06cea2a612b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-controller-issuers
  subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-controller-orders
    resourceVersion: "4511"
    uid: e0cb414c-00eb-4025-a7d0-f35f2e2a20be
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-controller-orders
  subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-webhook:subjectaccessreviews
    resourceVersion: "4505"
    uid: 6bb1a89f-6a81-4c7c-9175-0c5ac0da777a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cert-manager-webhook:subjectaccessreviews
  subjects:
  - kind: ServiceAccount
    name: cert-manager-webhook
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: cluster-admin
    resourceVersion: "137"
    uid: b8599aa4-bbf6-4760-b573-60165340f084
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:masters
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-07-17T16:45:49Z"
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: cluster-reconciler-flux-system
    resourceVersion: "123538"
    uid: 0ec9f494-bccf-4398-96da-2a8ea7c3b58f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - kind: ServiceAccount
    name: kustomize-controller
    namespace: flux-system
  - kind: ServiceAccount
    name: helm-controller
    namespace: flux-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-07-17T16:45:49Z"
    labels:
      app.kubernetes.io/instance: flux-system
      app.kubernetes.io/part-of: flux
      app.kubernetes.io/version: v2.6.4
      kustomize.toolkit.fluxcd.io/name: flux-system
      kustomize.toolkit.fluxcd.io/namespace: flux-system
    name: crd-controller-flux-system
    resourceVersion: "123539"
    uid: 2c5e575b-fb6f-41fe-a1e6-6bd8073d052c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: crd-controller-flux-system
  subjects:
  - kind: ServiceAccount
    name: kustomize-controller
    namespace: flux-system
  - kind: ServiceAccount
    name: helm-controller
    namespace: flux-system
  - kind: ServiceAccount
    name: source-controller
    namespace: flux-system
  - kind: ServiceAccount
    name: notification-controller
    namespace: flux-system
  - kind: ServiceAccount
    name: image-reflector-controller
    namespace: flux-system
  - kind: ServiceAccount
    name: image-automation-controller
    namespace: flux-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:40Z"
    labels:
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: grafana
      app.kubernetes.io/version: 12.0.2
      helm.sh/chart: grafana-9.2.10
    name: kube-prom-grafana-clusterrolebinding
    resourceVersion: "9267"
    uid: 5dd70c6e-bc73-4e34-b01d-58bc092d103e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube-prom-grafana-clusterrole
  subjects:
  - kind: ServiceAccount
    name: kube-prom-grafana
    namespace: monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:40Z"
    labels:
      app: kube-prometheus-stack-operator
      app.kubernetes.io/component: prometheus-operator
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus-stack-prometheus-operator
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 75.11.0
      chart: kube-prometheus-stack-75.11.0
      heritage: Helm
      release: kube-prom
    name: kube-prom-kube-prometheus-operator
    resourceVersion: "9269"
    uid: 5a60b6b3-bf9f-49a9-8b4c-8b45a3e876c3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube-prom-kube-prometheus-operator
  subjects:
  - kind: ServiceAccount
    name: kube-prom-kube-prometheus-operator
    namespace: monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:40Z"
    labels:
      app: kube-prometheus-stack-prometheus
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 75.11.0
      chart: kube-prometheus-stack-75.11.0
      heritage: Helm
      release: kube-prom
    name: kube-prom-kube-prometheus-prometheus
    resourceVersion: "9270"
    uid: 19784f9a-81f7-4a73-9961-3fe314d51688
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube-prom-kube-prometheus-prometheus
  subjects:
  - kind: ServiceAccount
    name: kube-prom-kube-prometheus-prometheus
    namespace: monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:40Z"
    labels:
      app.kubernetes.io/component: metrics
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: kube-state-metrics
      app.kubernetes.io/version: 2.16.0
      helm.sh/chart: kube-state-metrics-6.1.0
      release: kube-prom
    name: kube-prom-kube-state-metrics
    resourceVersion: "9268"
    uid: a9aa5e6f-1ced-4160-97ae-2e16135fc863
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kube-prom-kube-state-metrics
  subjects:
  - kind: ServiceAccount
    name: kube-prom-kube-state-metrics
    namespace: monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-07-16T21:39:41Z"
    name: kubeadm:cluster-admins
    resourceVersion: "239"
    uid: cc3795b8-57e4-4862-96f4-a62e4ab5cda0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: cluster-admin
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: kubeadm:cluster-admins
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-07-16T21:39:42Z"
    name: kubeadm:get-nodes
    resourceVersion: "259"
    uid: a77570d7-ffe8-4317-99da-4e77f48fecf0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: kubeadm:get-nodes
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-07-16T21:39:42Z"
    name: kubeadm:kubelet-bootstrap
    resourceVersion: "260"
    uid: 51aff820-b4b5-4482-beed-04217fd4b359
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-bootstrapper
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-07-16T21:39:42Z"
    name: kubeadm:node-autoapprove-bootstrap
    resourceVersion: "261"
    uid: 0979f1d6-28c6-444f-bbce-6ce6ac536d9c
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:certificates.k8s.io:certificatesigningrequests:nodeclient
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:bootstrappers:kubeadm:default-node-token
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-07-16T21:39:42Z"
    name: kubeadm:node-autoapprove-certificate-rotation
    resourceVersion: "262"
    uid: 0d6f0218-d485-4606-8bc4-8995c0b0d11d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:certificates.k8s.io:certificatesigningrequests:selfnodeclient
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:nodes
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-07-16T21:39:43Z"
    name: kubeadm:node-proxier
    resourceVersion: "286"
    uid: 65efdd41-e14d-4ef0-9cbd-05d37d277a8a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - kind: ServiceAccount
    name: kube-proxy
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"app":"metallb"},"name":"metallb-system:controller"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"metallb-system:controller"},"subjects":[{"kind":"ServiceAccount","name":"controller","namespace":"metallb-system"}]}
    creationTimestamp: "2025-07-16T21:54:50Z"
    labels:
      app: metallb
    name: metallb-system:controller
    resourceVersion: "1947"
    uid: a9473dc4-f8dd-40ea-b40c-906b75efc40b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: metallb-system:controller
  subjects:
  - kind: ServiceAccount
    name: controller
    namespace: metallb-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"rbac.authorization.k8s.io/v1","kind":"ClusterRoleBinding","metadata":{"annotations":{},"labels":{"app":"metallb"},"name":"metallb-system:speaker"},"roleRef":{"apiGroup":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"metallb-system:speaker"},"subjects":[{"kind":"ServiceAccount","name":"speaker","namespace":"metallb-system"}]}
    creationTimestamp: "2025-07-16T21:54:50Z"
    labels:
      app: metallb
    name: metallb-system:speaker
    resourceVersion: "1948"
    uid: dba536fc-acbe-4fb0-9606-765036d3cdce
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: metallb-system:speaker
  subjects:
  - kind: ServiceAccount
    name: speaker
    namespace: metallb-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: namecheap-webhook
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:28:54Z"
    labels:
      app: cert-manager-webhook-namecheap
      app.kubernetes.io/managed-by: Helm
      chart: cert-manager-webhook-namecheap-0.2.2
      heritage: Helm
      release: namecheap-webhook
    name: namecheap-webhook-cert-manager-webhook-namecheap
    resourceVersion: "5817"
    uid: b2297f1d-d67f-483b-ae12-cb904629ba6f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: namecheap-webhook-cert-manager-webhook-namecheap
  subjects:
  - kind: ServiceAccount
    name: namecheap-webhook-cert-manager-webhook-namecheap
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: namecheap-webhook
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:28:54Z"
    labels:
      app: cert-manager-webhook-namecheap
      app.kubernetes.io/managed-by: Helm
      chart: cert-manager-webhook-namecheap-0.2.2
      heritage: Helm
      release: namecheap-webhook
    name: namecheap-webhook-cert-manager-webhook-namecheap:auth-delegator
    resourceVersion: "5819"
    uid: 740818a6-97a7-4c4f-8d0b-1db8ba7e76fe
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:auth-delegator
  subjects:
  - kind: ServiceAccount
    name: namecheap-webhook-cert-manager-webhook-namecheap
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: namecheap-webhook
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:28:54Z"
    labels:
      app: cert-manager-webhook-namecheap
      app.kubernetes.io/managed-by: Helm
      chart: cert-manager-webhook-namecheap-0.2.2
      heritage: Helm
      release: namecheap-webhook
    name: namecheap-webhook-cert-manager-webhook-namecheap:domain-solver
    resourceVersion: "5818"
    uid: af612ca3-bdb6-4031-9612-e2570520cff8
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: namecheap-webhook-cert-manager-webhook-namecheap:domain-solver
  subjects:
  - kind: ServiceAccount
    name: cert-manager
    namespace: cert-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    labels:
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx
    resourceVersion: "2377"
    uid: d821f1e4-dc57-469d-824e-b01ac5614958
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: nginx-ingress-nginx
  subjects:
  - kind: ServiceAccount
    name: nginx-ingress-nginx
    namespace: ingress-nginx
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:basic-user
    resourceVersion: "140"
    uid: 801ac5fc-0ab4-4071-b47c-43e67a0a3c83
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:basic-user
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:attachdetach-controller
    resourceVersion: "149"
    uid: 782ef4d1-2886-40f4-bf09-6dcd7da87cfe
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:attachdetach-controller
  subjects:
  - kind: ServiceAccount
    name: attachdetach-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:certificate-controller
    resourceVersion: "175"
    uid: b374558d-fad6-4ad5-a115-9078822be9b3
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:certificate-controller
  subjects:
  - kind: ServiceAccount
    name: certificate-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:clusterrole-aggregation-controller
    resourceVersion: "150"
    uid: 55433550-e5f3-46e7-8418-ffc5d5b5b54b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:clusterrole-aggregation-controller
  subjects:
  - kind: ServiceAccount
    name: clusterrole-aggregation-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:cronjob-controller
    resourceVersion: "151"
    uid: 55fb9ad3-bc4b-4d78-b712-eba266ba1167
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:cronjob-controller
  subjects:
  - kind: ServiceAccount
    name: cronjob-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:daemon-set-controller
    resourceVersion: "152"
    uid: b9f93bf3-2d5c-452f-97ad-3da4cf558f28
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:daemon-set-controller
  subjects:
  - kind: ServiceAccount
    name: daemon-set-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:deployment-controller
    resourceVersion: "153"
    uid: a1ed706f-07a0-435f-bd09-f4081099f344
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:deployment-controller
  subjects:
  - kind: ServiceAccount
    name: deployment-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:disruption-controller
    resourceVersion: "154"
    uid: 55036358-a095-41db-82a5-bc4e40c84718
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:disruption-controller
  subjects:
  - kind: ServiceAccount
    name: disruption-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpoint-controller
    resourceVersion: "155"
    uid: fdaa6b5a-2430-45f9-a03c-f3fa29824c92
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpoint-controller
  subjects:
  - kind: ServiceAccount
    name: endpoint-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslice-controller
    resourceVersion: "156"
    uid: a3e0797c-bc05-425f-9d29-0529365e1b88
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslice-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslice-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:endpointslicemirroring-controller
    resourceVersion: "157"
    uid: 8dd39ee3-6e93-4245-a30b-f5a033517a1d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:endpointslicemirroring-controller
  subjects:
  - kind: ServiceAccount
    name: endpointslicemirroring-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ephemeral-volume-controller
    resourceVersion: "159"
    uid: 2238724a-f111-4ff3-b2d2-27586148e344
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ephemeral-volume-controller
  subjects:
  - kind: ServiceAccount
    name: ephemeral-volume-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:expand-controller
    resourceVersion: "158"
    uid: c17ed73f-2b6d-4ddb-bc45-16a9f8f12c2e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:expand-controller
  subjects:
  - kind: ServiceAccount
    name: expand-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:generic-garbage-collector
    resourceVersion: "160"
    uid: 41d42c4b-1751-4004-8208-810a414ac83f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:generic-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: generic-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:horizontal-pod-autoscaler
    resourceVersion: "161"
    uid: 290f43aa-640b-4872-85f2-b4d4f8fc5bc1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:horizontal-pod-autoscaler
  subjects:
  - kind: ServiceAccount
    name: horizontal-pod-autoscaler
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:job-controller
    resourceVersion: "162"
    uid: 60626357-3024-454c-9f63-75330d25cde2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:job-controller
  subjects:
  - kind: ServiceAccount
    name: job-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:legacy-service-account-token-cleaner
    resourceVersion: "181"
    uid: 4f9a7d74-307c-4777-b4c9-ede273dc95b0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:legacy-service-account-token-cleaner
  subjects:
  - kind: ServiceAccount
    name: legacy-service-account-token-cleaner
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:namespace-controller
    resourceVersion: "163"
    uid: fd76dbf6-ab85-4983-92db-c7595831e52d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:namespace-controller
  subjects:
  - kind: ServiceAccount
    name: namespace-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:node-controller
    resourceVersion: "164"
    uid: 57972373-0e0c-42ab-9655-817360c1ff50
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:node-controller
  subjects:
  - kind: ServiceAccount
    name: node-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:persistent-volume-binder
    resourceVersion: "165"
    uid: 3412e5d0-ec42-4474-88e1-ecbfd1bbf71b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:persistent-volume-binder
  subjects:
  - kind: ServiceAccount
    name: persistent-volume-binder
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pod-garbage-collector
    resourceVersion: "166"
    uid: 0536bb3b-cb14-4bc4-b179-01629484fbc5
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pod-garbage-collector
  subjects:
  - kind: ServiceAccount
    name: pod-garbage-collector
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pv-protection-controller
    resourceVersion: "177"
    uid: 6b6a09e4-b45c-4acc-8720-26c238ccfb71
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pv-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pv-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:pvc-protection-controller
    resourceVersion: "176"
    uid: 895cb2e0-62ad-453c-803c-0ffbb1fb6ce5
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:pvc-protection-controller
  subjects:
  - kind: ServiceAccount
    name: pvc-protection-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replicaset-controller
    resourceVersion: "167"
    uid: 10573d0a-c457-4996-a1f9-8d513a5313c0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replicaset-controller
  subjects:
  - kind: ServiceAccount
    name: replicaset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:replication-controller
    resourceVersion: "168"
    uid: c4eb5bbc-3c8d-40f1-babb-3d1a6d9cd9ed
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:replication-controller
  subjects:
  - kind: ServiceAccount
    name: replication-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:resourcequota-controller
    resourceVersion: "169"
    uid: 6f4286d1-113e-4447-a005-13d58adb904b
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:resourcequota-controller
  subjects:
  - kind: ServiceAccount
    name: resourcequota-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:root-ca-cert-publisher
    resourceVersion: "179"
    uid: 367592af-bff0-4e8d-8123-996a19c070f5
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:root-ca-cert-publisher
  subjects:
  - kind: ServiceAccount
    name: root-ca-cert-publisher
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:route-controller
    resourceVersion: "170"
    uid: 635669ab-a13d-4f0e-8f26-b87e81de15e0
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:route-controller
  subjects:
  - kind: ServiceAccount
    name: route-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-account-controller
    resourceVersion: "171"
    uid: 86a645bb-f5a3-4d7f-a71f-4f85263021d7
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-account-controller
  subjects:
  - kind: ServiceAccount
    name: service-account-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:service-controller
    resourceVersion: "172"
    uid: 5edd379a-7382-4784-8aba-80763e2545d1
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:service-controller
  subjects:
  - kind: ServiceAccount
    name: service-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:statefulset-controller
    resourceVersion: "173"
    uid: 43f149f6-8644-4571-b186-dfbd6e867102
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:statefulset-controller
  subjects:
  - kind: ServiceAccount
    name: statefulset-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-after-finished-controller
    resourceVersion: "178"
    uid: ecddb1ca-0abf-428d-81c4-e7ade0db9778
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-after-finished-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-after-finished-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:ttl-controller
    resourceVersion: "174"
    uid: f240b69b-0718-44b9-945f-c6f5407f2fe2
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:ttl-controller
  subjects:
  - kind: ServiceAccount
    name: ttl-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:controller:validatingadmissionpolicy-status-controller
    resourceVersion: "180"
    uid: c883b3d9-ce0b-4697-9944-22dcaeb5fc15
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:controller:validatingadmissionpolicy-status-controller
  subjects:
  - kind: ServiceAccount
    name: validatingadmissionpolicy-status-controller
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    creationTimestamp: "2025-07-16T21:39:42Z"
    name: system:coredns
    resourceVersion: "272"
    uid: 76e7bcea-d710-42bb-9984-5c3e2bf58502
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:coredns
  subjects:
  - kind: ServiceAccount
    name: coredns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:discovery
    resourceVersion: "139"
    uid: 5a6406c5-be79-46dd-bf05-66b9e1e2647e
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-controller-manager
    resourceVersion: "143"
    uid: f210649b-dd02-417c-a26a-2bf852c5c1a6
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-controller-manager
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-controller-manager
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-dns
    resourceVersion: "144"
    uid: 906883db-c366-4ad9-b72e-a4ac69edaf09
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-dns
  subjects:
  - kind: ServiceAccount
    name: kube-dns
    namespace: kube-system
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:kube-scheduler
    resourceVersion: "145"
    uid: bc95384b-61d4-4505-8c0d-d7aac43f24ae
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:kube-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:monitoring
    resourceVersion: "138"
    uid: 9d6fda15-b6f7-485e-8570-5869cfff3b5a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:monitoring
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:monitoring
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node
    resourceVersion: "147"
    uid: 6ac149c5-f23b-437e-af67-262c26d4ca6f
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:node-proxier
    resourceVersion: "142"
    uid: 035888e6-8bf6-4340-bbcb-de1a02ebb747
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:node-proxier
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-proxy
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:public-info-viewer
    resourceVersion: "141"
    uid: e858210b-3819-42b0-9c10-0725a8e25745
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:public-info-viewer
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:authenticated
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:unauthenticated
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:service-account-issuer-discovery
    resourceVersion: "148"
    uid: 1f1aeb3d-aa75-4cf3-8407-4120d8d6e15d
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:service-account-issuer-discovery
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: Group
    name: system:serviceaccounts
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    annotations:
      rbac.authorization.kubernetes.io/autoupdate: "true"
    creationTimestamp: "2025-07-16T21:39:41Z"
    labels:
      kubernetes.io/bootstrapping: rbac-defaults
    name: system:volume-scheduler
    resourceVersion: "146"
    uid: f1abd2b3-b047-44fb-9b18-bf40446f9a1a
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: system:volume-scheduler
  subjects:
  - apiGroup: rbac.authorization.k8s.io
    kind: User
    name: system:kube-scheduler
- apiVersion: admissionregistration.k8s.io/v1
  kind: ValidatingWebhookConfiguration
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-webhook-ca
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    generation: 2
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-webhook
    resourceVersion: "4650"
    uid: f4a24845-a361-4f09-bb06-ba88d4387def
  webhooks:
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1iMm5GSUQ2cFVyNzN5VURBUkN3YUV3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpVd056RTJNakl4T0RFeApXaGNOTWpZd056RTJNakl4T0RFeFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJMQWhDbDZ2SkhLVmorSk1KRzViQW5rY3lvbHkKa1lOczRZZ0JsZkRPaitFODZ2aUdORFhBR1B3aTdqaHphUDdpMWZPVDkwenVtcEUrVlNVYXhQb3lwMkkvRzY1VgptQ2Rrd083d0hFNHZxdGdoQ1d2QjM1WnhqVkZxbCtRR0R2ank2S05DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJSUFmUkNBNGtDdHlPangySkZkUjFzZWJmTlAKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFESjBBVUgxRmRiV1JhWk94bnFsU0haRjFCc01XSFU0RmJYVk5mQQordDJCdHd2SUFKcVV2N2VSTDQxSVV2ZmtpbWtDTVFDUE0wVE5GM2dSaW1Qd3FjNWF3a0d4T3NnQzZtWDgxaDF4Cjl3YjY3cDltbXZPVWdjdUZqaWlZQWVleDRVbi81bXM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      service:
        name: cert-manager-webhook
        namespace: cert-manager
        path: /validate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: webhook.cert-manager.io
    namespaceSelector:
      matchExpressions:
      - key: cert-manager.io/disable-validation
        operator: NotIn
        values:
        - "true"
    objectSelector: {}
    rules:
    - apiGroups:
      - cert-manager.io
      - acme.cert-manager.io
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - '*/*'
      scope: '*'
    sideEffects: None
    timeoutSeconds: 30
- apiVersion: admissionregistration.k8s.io/v1
  kind: ValidatingWebhookConfiguration
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:42Z"
    generation: 2
    labels:
      app: kube-prometheus-stack-admission
      app.kubernetes.io/component: prometheus-operator-webhook
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus-stack-prometheus-operator
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 75.11.0
      chart: kube-prometheus-stack-75.11.0
      heritage: Helm
      release: kube-prom
    name: kube-prom-kube-prometheus-admission
    resourceVersion: "9502"
    uid: 40dbe695-2915-4e58-9480-4f55a9411ea2
  webhooks:
  - admissionReviewVersions:
    - v1
    - v1beta1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkekNDQVJ5Z0F3SUJBZ0lSQU9YblE2K1hvU2M4M2NCS0dFT3dDQzh3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FYm1sc01UQWdGdzB5TlRBM01UWXlNalV5TXpaYUdBOHlNVEkxTURZeU1qSXlOVEl6TmxvdwpEekVOTUFzR0ExVUVDaE1FYm1sc01UQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJMQmpLQTJYCkJ3WjRKTGdsZWp3U0I2eVRvemNoU3Fld1V2aEJZOThBeUtVMEtOYWtscEw3SWlXeTRPZ1BQeUVrQWFNNHlPOHAKWWpCUFFmbERweDRnRzNTalZ6QlZNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRgpCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJURlhaWnl6dTNScmlsaE5VS0cxcWtmCnFnQXpOakFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBN2RIVDVvRWRXaGw1QnFjME1rVFBnYnFrOHgxVTltNjIKTEFIMWJmYzZzaThDSVFEYXNhbnJLQmJxUzVQTDF4RVJZOU0zYTlvd2Q2NDRJNmhRTjNyNzA3Z1lvUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      service:
        name: kube-prom-kube-prometheus-operator
        namespace: monitoring
        path: /admission-prometheusrules/validate
        port: 443
    failurePolicy: Ignore
    matchPolicy: Equivalent
    name: prometheusrulemutate.monitoring.coreos.com
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - monitoring.coreos.com
      apiVersions:
      - '*'
      operations:
      - CREATE
      - UPDATE
      resources:
      - prometheusrules
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
- apiVersion: admissionregistration.k8s.io/v1
  kind: ValidatingWebhookConfiguration
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"admissionregistration.k8s.io/v1","kind":"ValidatingWebhookConfiguration","metadata":{"annotations":{},"creationTimestamp":null,"name":"metallb-webhook-configuration"},"webhooks":[{"admissionReviewVersions":["v1"],"clientConfig":{"service":{"name":"webhook-service","namespace":"metallb-system","path":"/validate-metallb-io-v1beta2-bgppeer"}},"failurePolicy":"Fail","name":"bgppeersvalidationwebhook.metallb.io","rules":[{"apiGroups":["metallb.io"],"apiVersions":["v1beta2"],"operations":["CREATE","UPDATE"],"resources":["bgppeers"]}],"sideEffects":"None"},{"admissionReviewVersions":["v1"],"clientConfig":{"service":{"name":"webhook-service","namespace":"metallb-system","path":"/validate-metallb-io-v1beta1-addresspool"}},"failurePolicy":"Fail","name":"addresspoolvalidationwebhook.metallb.io","rules":[{"apiGroups":["metallb.io"],"apiVersions":["v1beta1"],"operations":["CREATE","UPDATE"],"resources":["addresspools"]}],"sideEffects":"None"},{"admissionReviewVersions":["v1"],"clientConfig":{"service":{"name":"webhook-service","namespace":"metallb-system","path":"/validate-metallb-io-v1beta1-bfdprofile"}},"failurePolicy":"Fail","name":"bfdprofilevalidationwebhook.metallb.io","rules":[{"apiGroups":["metallb.io"],"apiVersions":["v1beta1"],"operations":["CREATE","DELETE"],"resources":["bfdprofiles"]}],"sideEffects":"None"},{"admissionReviewVersions":["v1"],"clientConfig":{"service":{"name":"webhook-service","namespace":"metallb-system","path":"/validate-metallb-io-v1beta1-bgpadvertisement"}},"failurePolicy":"Fail","name":"bgpadvertisementvalidationwebhook.metallb.io","rules":[{"apiGroups":["metallb.io"],"apiVersions":["v1beta1"],"operations":["CREATE","UPDATE"],"resources":["bgpadvertisements"]}],"sideEffects":"None"},{"admissionReviewVersions":["v1"],"clientConfig":{"service":{"name":"webhook-service","namespace":"metallb-system","path":"/validate-metallb-io-v1beta1-community"}},"failurePolicy":"Fail","name":"communityvalidationwebhook.metallb.io","rules":[{"apiGroups":["metallb.io"],"apiVersions":["v1beta1"],"operations":["CREATE","UPDATE"],"resources":["communities"]}],"sideEffects":"None"},{"admissionReviewVersions":["v1"],"clientConfig":{"service":{"name":"webhook-service","namespace":"metallb-system","path":"/validate-metallb-io-v1beta1-ipaddresspool"}},"failurePolicy":"Fail","name":"ipaddresspoolvalidationwebhook.metallb.io","rules":[{"apiGroups":["metallb.io"],"apiVersions":["v1beta1"],"operations":["CREATE","UPDATE"],"resources":["ipaddresspools"]}],"sideEffects":"None"},{"admissionReviewVersions":["v1"],"clientConfig":{"service":{"name":"webhook-service","namespace":"metallb-system","path":"/validate-metallb-io-v1beta1-l2advertisement"}},"failurePolicy":"Fail","name":"l2advertisementvalidationwebhook.metallb.io","rules":[{"apiGroups":["metallb.io"],"apiVersions":["v1beta1"],"operations":["CREATE","UPDATE"],"resources":["l2advertisements"]}],"sideEffects":"None"}]}
    creationTimestamp: "2025-07-16T21:54:51Z"
    generation: 2
    name: metallb-webhook-configuration
    resourceVersion: "2023"
    uid: a6170aea-0d55-4f4f-9afd-ba5eae9015a9
  webhooks:
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFoTVJBd0RnWURWUVFLRXdkdFpYUmgKYkd4aU1RMHdDd1lEVlFRREV3UmpaWEowTUI0WERUSTFNRGN4TmpJd05UUTFOVm9YRFRNMU1EY3hOREl4TlRRMQpOVm93SVRFUU1BNEdBMVVFQ2hNSGJXVjBZV3hzWWpFTk1Bc0dBMVVFQXhNRVkyVnlkRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDh2T3BGSkIvYjc1OGhzS0NnSmszR3g1ZS90MzN4cjRoR2UKL3hFVnEwWFJyVzQ0ajJ5WmlpbDk0MDgvdjdxdzZxOG5YS2dSc2xEb2tDZHhhSlFGRTlGN2FIY00wVHJUdkJtSgpSbFhNQTJNQ1gwUFhzaW5mUmFldWRlUVlCRExpTjFhSERiRGtneWhoUWtNZng5RFZlU3Z4U0xtemQ5c2tEMXZGCkkrcGhpVDdEYXE3OHVyWmVScEdQTE5sbnl2cW5BNnYrSkZDZkxJWWg2MG1PVUhmS2w5OTBrMEF5UUpUSzVOM1cKMzZRNGtKRjZEeUp1Mmx1RjA4aXc1Q0NoanFOc0VLR1BGZ2RxNjJ5K2NDMEFXWkRLWXN4OWl1MFFuMFVzSVNvLwp3YWE5VGZOUlV1TFAyWTFDNnZ4UEFxcnp6bm1naE1UWko4SnYrZSt0VlV6TkF5ZmQweFVDQXdFQUFhTlRNRkV3CkRnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ZZFd1RVYKUXFTRHd5SzlaKzNscUhOS0hIRGdNQThHQTFVZEVRUUlNQWFDQkdObGNuUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUx4bElEWTVvTzZhSVJwRXBOZUJZbjFQYkpXT0hnK2h4ZG9JRU16MDUrcWtGVmlhNm5zRCswQWNwbmRiCmdUWXpKbkVzYVAyOHZDWXduWTN0Vld4d0VOeTFBSElaNFVHWDBWZlZoV2VmSWxtczFVVzY4YmR3eGpYMVFPUlkKQ1JNazNSaGFOMzZqL3dPMm5IeHRtem90cXNlZVA4TkhOVTFrbnUralNKRWZvKytVZGd6dkdHUm0ySnp5KzJmeQpIa3p1RlZsQklEdlVXZXB6NytqSi9rU05yVmVJdnVucVdIV2ZEVzNtTXZKNWwweW5OZnE3cHNNOU40bWFRcmRkCllBTDhoeDhlQkdOcmQxSGFnMDN6akgwcG8yaEtrTFBxS0owQVlNNjFEcTcwL3ErS3lQQjg5TWkvU2VPWCs5MnoKRHFvYVY3b1RzdXZFMFl5ditjUHVwbVpWY2tjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: webhook-service
        namespace: metallb-system
        path: /validate-metallb-io-v1beta2-bgppeer
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: bgppeersvalidationwebhook.metallb.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - metallb.io
      apiVersions:
      - v1beta2
      operations:
      - CREATE
      - UPDATE
      resources:
      - bgppeers
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFoTVJBd0RnWURWUVFLRXdkdFpYUmgKYkd4aU1RMHdDd1lEVlFRREV3UmpaWEowTUI0WERUSTFNRGN4TmpJd05UUTFOVm9YRFRNMU1EY3hOREl4TlRRMQpOVm93SVRFUU1BNEdBMVVFQ2hNSGJXVjBZV3hzWWpFTk1Bc0dBMVVFQXhNRVkyVnlkRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDh2T3BGSkIvYjc1OGhzS0NnSmszR3g1ZS90MzN4cjRoR2UKL3hFVnEwWFJyVzQ0ajJ5WmlpbDk0MDgvdjdxdzZxOG5YS2dSc2xEb2tDZHhhSlFGRTlGN2FIY00wVHJUdkJtSgpSbFhNQTJNQ1gwUFhzaW5mUmFldWRlUVlCRExpTjFhSERiRGtneWhoUWtNZng5RFZlU3Z4U0xtemQ5c2tEMXZGCkkrcGhpVDdEYXE3OHVyWmVScEdQTE5sbnl2cW5BNnYrSkZDZkxJWWg2MG1PVUhmS2w5OTBrMEF5UUpUSzVOM1cKMzZRNGtKRjZEeUp1Mmx1RjA4aXc1Q0NoanFOc0VLR1BGZ2RxNjJ5K2NDMEFXWkRLWXN4OWl1MFFuMFVzSVNvLwp3YWE5VGZOUlV1TFAyWTFDNnZ4UEFxcnp6bm1naE1UWko4SnYrZSt0VlV6TkF5ZmQweFVDQXdFQUFhTlRNRkV3CkRnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ZZFd1RVYKUXFTRHd5SzlaKzNscUhOS0hIRGdNQThHQTFVZEVRUUlNQWFDQkdObGNuUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUx4bElEWTVvTzZhSVJwRXBOZUJZbjFQYkpXT0hnK2h4ZG9JRU16MDUrcWtGVmlhNm5zRCswQWNwbmRiCmdUWXpKbkVzYVAyOHZDWXduWTN0Vld4d0VOeTFBSElaNFVHWDBWZlZoV2VmSWxtczFVVzY4YmR3eGpYMVFPUlkKQ1JNazNSaGFOMzZqL3dPMm5IeHRtem90cXNlZVA4TkhOVTFrbnUralNKRWZvKytVZGd6dkdHUm0ySnp5KzJmeQpIa3p1RlZsQklEdlVXZXB6NytqSi9rU05yVmVJdnVucVdIV2ZEVzNtTXZKNWwweW5OZnE3cHNNOU40bWFRcmRkCllBTDhoeDhlQkdOcmQxSGFnMDN6akgwcG8yaEtrTFBxS0owQVlNNjFEcTcwL3ErS3lQQjg5TWkvU2VPWCs5MnoKRHFvYVY3b1RzdXZFMFl5ditjUHVwbVpWY2tjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: webhook-service
        namespace: metallb-system
        path: /validate-metallb-io-v1beta1-addresspool
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: addresspoolvalidationwebhook.metallb.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - metallb.io
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - addresspools
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFoTVJBd0RnWURWUVFLRXdkdFpYUmgKYkd4aU1RMHdDd1lEVlFRREV3UmpaWEowTUI0WERUSTFNRGN4TmpJd05UUTFOVm9YRFRNMU1EY3hOREl4TlRRMQpOVm93SVRFUU1BNEdBMVVFQ2hNSGJXVjBZV3hzWWpFTk1Bc0dBMVVFQXhNRVkyVnlkRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDh2T3BGSkIvYjc1OGhzS0NnSmszR3g1ZS90MzN4cjRoR2UKL3hFVnEwWFJyVzQ0ajJ5WmlpbDk0MDgvdjdxdzZxOG5YS2dSc2xEb2tDZHhhSlFGRTlGN2FIY00wVHJUdkJtSgpSbFhNQTJNQ1gwUFhzaW5mUmFldWRlUVlCRExpTjFhSERiRGtneWhoUWtNZng5RFZlU3Z4U0xtemQ5c2tEMXZGCkkrcGhpVDdEYXE3OHVyWmVScEdQTE5sbnl2cW5BNnYrSkZDZkxJWWg2MG1PVUhmS2w5OTBrMEF5UUpUSzVOM1cKMzZRNGtKRjZEeUp1Mmx1RjA4aXc1Q0NoanFOc0VLR1BGZ2RxNjJ5K2NDMEFXWkRLWXN4OWl1MFFuMFVzSVNvLwp3YWE5VGZOUlV1TFAyWTFDNnZ4UEFxcnp6bm1naE1UWko4SnYrZSt0VlV6TkF5ZmQweFVDQXdFQUFhTlRNRkV3CkRnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ZZFd1RVYKUXFTRHd5SzlaKzNscUhOS0hIRGdNQThHQTFVZEVRUUlNQWFDQkdObGNuUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUx4bElEWTVvTzZhSVJwRXBOZUJZbjFQYkpXT0hnK2h4ZG9JRU16MDUrcWtGVmlhNm5zRCswQWNwbmRiCmdUWXpKbkVzYVAyOHZDWXduWTN0Vld4d0VOeTFBSElaNFVHWDBWZlZoV2VmSWxtczFVVzY4YmR3eGpYMVFPUlkKQ1JNazNSaGFOMzZqL3dPMm5IeHRtem90cXNlZVA4TkhOVTFrbnUralNKRWZvKytVZGd6dkdHUm0ySnp5KzJmeQpIa3p1RlZsQklEdlVXZXB6NytqSi9rU05yVmVJdnVucVdIV2ZEVzNtTXZKNWwweW5OZnE3cHNNOU40bWFRcmRkCllBTDhoeDhlQkdOcmQxSGFnMDN6akgwcG8yaEtrTFBxS0owQVlNNjFEcTcwL3ErS3lQQjg5TWkvU2VPWCs5MnoKRHFvYVY3b1RzdXZFMFl5ditjUHVwbVpWY2tjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: webhook-service
        namespace: metallb-system
        path: /validate-metallb-io-v1beta1-bfdprofile
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: bfdprofilevalidationwebhook.metallb.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - metallb.io
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - DELETE
      resources:
      - bfdprofiles
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFoTVJBd0RnWURWUVFLRXdkdFpYUmgKYkd4aU1RMHdDd1lEVlFRREV3UmpaWEowTUI0WERUSTFNRGN4TmpJd05UUTFOVm9YRFRNMU1EY3hOREl4TlRRMQpOVm93SVRFUU1BNEdBMVVFQ2hNSGJXVjBZV3hzWWpFTk1Bc0dBMVVFQXhNRVkyVnlkRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDh2T3BGSkIvYjc1OGhzS0NnSmszR3g1ZS90MzN4cjRoR2UKL3hFVnEwWFJyVzQ0ajJ5WmlpbDk0MDgvdjdxdzZxOG5YS2dSc2xEb2tDZHhhSlFGRTlGN2FIY00wVHJUdkJtSgpSbFhNQTJNQ1gwUFhzaW5mUmFldWRlUVlCRExpTjFhSERiRGtneWhoUWtNZng5RFZlU3Z4U0xtemQ5c2tEMXZGCkkrcGhpVDdEYXE3OHVyWmVScEdQTE5sbnl2cW5BNnYrSkZDZkxJWWg2MG1PVUhmS2w5OTBrMEF5UUpUSzVOM1cKMzZRNGtKRjZEeUp1Mmx1RjA4aXc1Q0NoanFOc0VLR1BGZ2RxNjJ5K2NDMEFXWkRLWXN4OWl1MFFuMFVzSVNvLwp3YWE5VGZOUlV1TFAyWTFDNnZ4UEFxcnp6bm1naE1UWko4SnYrZSt0VlV6TkF5ZmQweFVDQXdFQUFhTlRNRkV3CkRnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ZZFd1RVYKUXFTRHd5SzlaKzNscUhOS0hIRGdNQThHQTFVZEVRUUlNQWFDQkdObGNuUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUx4bElEWTVvTzZhSVJwRXBOZUJZbjFQYkpXT0hnK2h4ZG9JRU16MDUrcWtGVmlhNm5zRCswQWNwbmRiCmdUWXpKbkVzYVAyOHZDWXduWTN0Vld4d0VOeTFBSElaNFVHWDBWZlZoV2VmSWxtczFVVzY4YmR3eGpYMVFPUlkKQ1JNazNSaGFOMzZqL3dPMm5IeHRtem90cXNlZVA4TkhOVTFrbnUralNKRWZvKytVZGd6dkdHUm0ySnp5KzJmeQpIa3p1RlZsQklEdlVXZXB6NytqSi9rU05yVmVJdnVucVdIV2ZEVzNtTXZKNWwweW5OZnE3cHNNOU40bWFRcmRkCllBTDhoeDhlQkdOcmQxSGFnMDN6akgwcG8yaEtrTFBxS0owQVlNNjFEcTcwL3ErS3lQQjg5TWkvU2VPWCs5MnoKRHFvYVY3b1RzdXZFMFl5ditjUHVwbVpWY2tjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: webhook-service
        namespace: metallb-system
        path: /validate-metallb-io-v1beta1-bgpadvertisement
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: bgpadvertisementvalidationwebhook.metallb.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - metallb.io
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - bgpadvertisements
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFoTVJBd0RnWURWUVFLRXdkdFpYUmgKYkd4aU1RMHdDd1lEVlFRREV3UmpaWEowTUI0WERUSTFNRGN4TmpJd05UUTFOVm9YRFRNMU1EY3hOREl4TlRRMQpOVm93SVRFUU1BNEdBMVVFQ2hNSGJXVjBZV3hzWWpFTk1Bc0dBMVVFQXhNRVkyVnlkRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDh2T3BGSkIvYjc1OGhzS0NnSmszR3g1ZS90MzN4cjRoR2UKL3hFVnEwWFJyVzQ0ajJ5WmlpbDk0MDgvdjdxdzZxOG5YS2dSc2xEb2tDZHhhSlFGRTlGN2FIY00wVHJUdkJtSgpSbFhNQTJNQ1gwUFhzaW5mUmFldWRlUVlCRExpTjFhSERiRGtneWhoUWtNZng5RFZlU3Z4U0xtemQ5c2tEMXZGCkkrcGhpVDdEYXE3OHVyWmVScEdQTE5sbnl2cW5BNnYrSkZDZkxJWWg2MG1PVUhmS2w5OTBrMEF5UUpUSzVOM1cKMzZRNGtKRjZEeUp1Mmx1RjA4aXc1Q0NoanFOc0VLR1BGZ2RxNjJ5K2NDMEFXWkRLWXN4OWl1MFFuMFVzSVNvLwp3YWE5VGZOUlV1TFAyWTFDNnZ4UEFxcnp6bm1naE1UWko4SnYrZSt0VlV6TkF5ZmQweFVDQXdFQUFhTlRNRkV3CkRnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ZZFd1RVYKUXFTRHd5SzlaKzNscUhOS0hIRGdNQThHQTFVZEVRUUlNQWFDQkdObGNuUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUx4bElEWTVvTzZhSVJwRXBOZUJZbjFQYkpXT0hnK2h4ZG9JRU16MDUrcWtGVmlhNm5zRCswQWNwbmRiCmdUWXpKbkVzYVAyOHZDWXduWTN0Vld4d0VOeTFBSElaNFVHWDBWZlZoV2VmSWxtczFVVzY4YmR3eGpYMVFPUlkKQ1JNazNSaGFOMzZqL3dPMm5IeHRtem90cXNlZVA4TkhOVTFrbnUralNKRWZvKytVZGd6dkdHUm0ySnp5KzJmeQpIa3p1RlZsQklEdlVXZXB6NytqSi9rU05yVmVJdnVucVdIV2ZEVzNtTXZKNWwweW5OZnE3cHNNOU40bWFRcmRkCllBTDhoeDhlQkdOcmQxSGFnMDN6akgwcG8yaEtrTFBxS0owQVlNNjFEcTcwL3ErS3lQQjg5TWkvU2VPWCs5MnoKRHFvYVY3b1RzdXZFMFl5ditjUHVwbVpWY2tjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: webhook-service
        namespace: metallb-system
        path: /validate-metallb-io-v1beta1-community
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: communityvalidationwebhook.metallb.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - metallb.io
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - communities
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFoTVJBd0RnWURWUVFLRXdkdFpYUmgKYkd4aU1RMHdDd1lEVlFRREV3UmpaWEowTUI0WERUSTFNRGN4TmpJd05UUTFOVm9YRFRNMU1EY3hOREl4TlRRMQpOVm93SVRFUU1BNEdBMVVFQ2hNSGJXVjBZV3hzWWpFTk1Bc0dBMVVFQXhNRVkyVnlkRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDh2T3BGSkIvYjc1OGhzS0NnSmszR3g1ZS90MzN4cjRoR2UKL3hFVnEwWFJyVzQ0ajJ5WmlpbDk0MDgvdjdxdzZxOG5YS2dSc2xEb2tDZHhhSlFGRTlGN2FIY00wVHJUdkJtSgpSbFhNQTJNQ1gwUFhzaW5mUmFldWRlUVlCRExpTjFhSERiRGtneWhoUWtNZng5RFZlU3Z4U0xtemQ5c2tEMXZGCkkrcGhpVDdEYXE3OHVyWmVScEdQTE5sbnl2cW5BNnYrSkZDZkxJWWg2MG1PVUhmS2w5OTBrMEF5UUpUSzVOM1cKMzZRNGtKRjZEeUp1Mmx1RjA4aXc1Q0NoanFOc0VLR1BGZ2RxNjJ5K2NDMEFXWkRLWXN4OWl1MFFuMFVzSVNvLwp3YWE5VGZOUlV1TFAyWTFDNnZ4UEFxcnp6bm1naE1UWko4SnYrZSt0VlV6TkF5ZmQweFVDQXdFQUFhTlRNRkV3CkRnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ZZFd1RVYKUXFTRHd5SzlaKzNscUhOS0hIRGdNQThHQTFVZEVRUUlNQWFDQkdObGNuUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUx4bElEWTVvTzZhSVJwRXBOZUJZbjFQYkpXT0hnK2h4ZG9JRU16MDUrcWtGVmlhNm5zRCswQWNwbmRiCmdUWXpKbkVzYVAyOHZDWXduWTN0Vld4d0VOeTFBSElaNFVHWDBWZlZoV2VmSWxtczFVVzY4YmR3eGpYMVFPUlkKQ1JNazNSaGFOMzZqL3dPMm5IeHRtem90cXNlZVA4TkhOVTFrbnUralNKRWZvKytVZGd6dkdHUm0ySnp5KzJmeQpIa3p1RlZsQklEdlVXZXB6NytqSi9rU05yVmVJdnVucVdIV2ZEVzNtTXZKNWwweW5OZnE3cHNNOU40bWFRcmRkCllBTDhoeDhlQkdOcmQxSGFnMDN6akgwcG8yaEtrTFBxS0owQVlNNjFEcTcwL3ErS3lQQjg5TWkvU2VPWCs5MnoKRHFvYVY3b1RzdXZFMFl5ditjUHVwbVpWY2tjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: webhook-service
        namespace: metallb-system
        path: /validate-metallb-io-v1beta1-ipaddresspool
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: ipaddresspoolvalidationwebhook.metallb.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - metallb.io
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - ipaddresspools
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFoTVJBd0RnWURWUVFLRXdkdFpYUmgKYkd4aU1RMHdDd1lEVlFRREV3UmpaWEowTUI0WERUSTFNRGN4TmpJd05UUTFOVm9YRFRNMU1EY3hOREl4TlRRMQpOVm93SVRFUU1BNEdBMVVFQ2hNSGJXVjBZV3hzWWpFTk1Bc0dBMVVFQXhNRVkyVnlkRENDQVNJd0RRWUpLb1pJCmh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTDh2T3BGSkIvYjc1OGhzS0NnSmszR3g1ZS90MzN4cjRoR2UKL3hFVnEwWFJyVzQ0ajJ5WmlpbDk0MDgvdjdxdzZxOG5YS2dSc2xEb2tDZHhhSlFGRTlGN2FIY00wVHJUdkJtSgpSbFhNQTJNQ1gwUFhzaW5mUmFldWRlUVlCRExpTjFhSERiRGtneWhoUWtNZng5RFZlU3Z4U0xtemQ5c2tEMXZGCkkrcGhpVDdEYXE3OHVyWmVScEdQTE5sbnl2cW5BNnYrSkZDZkxJWWg2MG1PVUhmS2w5OTBrMEF5UUpUSzVOM1cKMzZRNGtKRjZEeUp1Mmx1RjA4aXc1Q0NoanFOc0VLR1BGZ2RxNjJ5K2NDMEFXWkRLWXN4OWl1MFFuMFVzSVNvLwp3YWE5VGZOUlV1TFAyWTFDNnZ4UEFxcnp6bm1naE1UWko4SnYrZSt0VlV6TkF5ZmQweFVDQXdFQUFhTlRNRkV3CkRnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRk9ZZFd1RVYKUXFTRHd5SzlaKzNscUhOS0hIRGdNQThHQTFVZEVRUUlNQWFDQkdObGNuUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUx4bElEWTVvTzZhSVJwRXBOZUJZbjFQYkpXT0hnK2h4ZG9JRU16MDUrcWtGVmlhNm5zRCswQWNwbmRiCmdUWXpKbkVzYVAyOHZDWXduWTN0Vld4d0VOeTFBSElaNFVHWDBWZlZoV2VmSWxtczFVVzY4YmR3eGpYMVFPUlkKQ1JNazNSaGFOMzZqL3dPMm5IeHRtem90cXNlZVA4TkhOVTFrbnUralNKRWZvKytVZGd6dkdHUm0ySnp5KzJmeQpIa3p1RlZsQklEdlVXZXB6NytqSi9rU05yVmVJdnVucVdIV2ZEVzNtTXZKNWwweW5OZnE3cHNNOU40bWFRcmRkCllBTDhoeDhlQkdOcmQxSGFnMDN6akgwcG8yaEtrTFBxS0owQVlNNjFEcTcwL3ErS3lQQjg5TWkvU2VPWCs5MnoKRHFvYVY3b1RzdXZFMFl5ditjUHVwbVpWY2tjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
      service:
        name: webhook-service
        namespace: metallb-system
        path: /validate-metallb-io-v1beta1-l2advertisement
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: l2advertisementvalidationwebhook.metallb.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - metallb.io
      apiVersions:
      - v1beta1
      operations:
      - CREATE
      - UPDATE
      resources:
      - l2advertisements
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
- apiVersion: admissionregistration.k8s.io/v1
  kind: ValidatingWebhookConfiguration
  metadata:
    annotations:
      meta.helm.sh/release-name: nginx
      meta.helm.sh/release-namespace: ingress-nginx
    creationTimestamp: "2025-07-16T21:57:52Z"
    generation: 2
    labels:
      app.kubernetes.io/component: admission-webhook
      app.kubernetes.io/instance: nginx
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: ingress-nginx
      app.kubernetes.io/part-of: ingress-nginx
      app.kubernetes.io/version: 1.13.0
      helm.sh/chart: ingress-nginx-4.13.0
    name: nginx-ingress-nginx-admission
    resourceVersion: "2440"
    uid: 8329008b-1eef-4187-8b50-d68453eb525c
  webhooks:
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkVENDQVJ1Z0F3SUJBZ0lRUnVnQVJGWnVEYk1xVTBHN2lLcEJQREFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1J1YVd3eE1DQVhEVEkxTURjeE5qSXhOVEkwT1ZvWUR6SXhNalV3TmpJeU1qRTFNalE1V2pBUApNUTB3Q3dZRFZRUUtFd1J1YVd3eE1Ga3dFd1lIS29aSXpqMENBUVlJS29aSXpqMERBUWNEUWdBRWJtdWJ6MndwCjRqY0E1VWxQUzZrQnhlNjQ1TzQ1clZZTitQNWVIbVZqb0lqVGI1Q2RuQlVsVDBPREVhR2VoRm5CVkNVWHRRYkQKcEZTaEZud3FFTE5GemFOWE1GVXdEZ1lEVlIwUEFRSC9CQVFEQWdJRU1CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRgpCd01CTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkkxUWxtS21LWUVZTGZyVW1VRUNja0daCkNkVlhNQW9HQ0NxR1NNNDlCQU1DQTBnQU1FVUNJUUNlK2JQaVV0RC9aSG5adGR1YW1MYXVVdmNaNXc5WEJ3QkQKMDJpTTFENGluUUlnUlUwQi9PR1RMZmNCaG5sRXhQOFE2U1llSndrUFB5NWV3WWMwSGRKdU1jYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
      service:
        name: nginx-ingress-nginx-controller-admission
        namespace: ingress-nginx
        path: /networking/v1/ingresses
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: validate.nginx.ingress.kubernetes.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - networking.k8s.io
      apiVersions:
      - v1
      operations:
      - CREATE
      - UPDATE
      resources:
      - ingresses
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
- apiVersion: admissionregistration.k8s.io/v1
  kind: MutatingWebhookConfiguration
  metadata:
    annotations:
      cert-manager.io/inject-ca-from-secret: cert-manager/cert-manager-webhook-ca
      meta.helm.sh/release-name: cert-manager
      meta.helm.sh/release-namespace: cert-manager
    creationTimestamp: "2025-07-16T22:18:07Z"
    generation: 2
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.14.4
      helm.sh/chart: cert-manager-v1.14.4
    name: cert-manager-webhook
    resourceVersion: "4651"
    uid: 48d6ddd1-c1de-467c-9064-babef7c7bdac
  webhooks:
  - admissionReviewVersions:
    - v1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJ3ekNDQVVpZ0F3SUJBZ0lSQU1iMm5GSUQ2cFVyNzN5VURBUkN3YUV3Q2dZSUtvWkl6ajBFQXdNd0lqRWcKTUI0R0ExVUVBeE1YWTJWeWRDMXRZVzVoWjJWeUxYZGxZbWh2YjJzdFkyRXdIaGNOTWpVd056RTJNakl4T0RFeApXaGNOTWpZd056RTJNakl4T0RFeFdqQWlNU0F3SGdZRFZRUURFeGRqWlhKMExXMWhibUZuWlhJdGQyVmlhRzl2CmF5MWpZVEIyTUJBR0J5cUdTTTQ5QWdFR0JTdUJCQUFpQTJJQUJMQWhDbDZ2SkhLVmorSk1KRzViQW5rY3lvbHkKa1lOczRZZ0JsZkRPaitFODZ2aUdORFhBR1B3aTdqaHphUDdpMWZPVDkwenVtcEUrVlNVYXhQb3lwMkkvRzY1VgptQ2Rrd083d0hFNHZxdGdoQ1d2QjM1WnhqVkZxbCtRR0R2ank2S05DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trCk1BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZJSUFmUkNBNGtDdHlPangySkZkUjFzZWJmTlAKTUFvR0NDcUdTTTQ5QkFNREEya0FNR1lDTVFESjBBVUgxRmRiV1JhWk94bnFsU0haRjFCc01XSFU0RmJYVk5mQQordDJCdHd2SUFKcVV2N2VSTDQxSVV2ZmtpbWtDTVFDUE0wVE5GM2dSaW1Qd3FjNWF3a0d4T3NnQzZtWDgxaDF4Cjl3YjY3cDltbXZPVWdjdUZqaWlZQWVleDRVbi81bXM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      service:
        name: cert-manager-webhook
        namespace: cert-manager
        path: /mutate
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: webhook.cert-manager.io
    namespaceSelector: {}
    objectSelector: {}
    reinvocationPolicy: Never
    rules:
    - apiGroups:
      - cert-manager.io
      apiVersions:
      - v1
      operations:
      - CREATE
      resources:
      - certificaterequests
      scope: '*'
    sideEffects: None
    timeoutSeconds: 30
- apiVersion: admissionregistration.k8s.io/v1
  kind: MutatingWebhookConfiguration
  metadata:
    annotations:
      meta.helm.sh/release-name: kube-prom
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-07-16T22:57:40Z"
    generation: 2
    labels:
      app: kube-prometheus-stack-admission
      app.kubernetes.io/component: prometheus-operator-webhook
      app.kubernetes.io/instance: kube-prom
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: kube-prometheus-stack-prometheus-operator
      app.kubernetes.io/part-of: kube-prometheus-stack
      app.kubernetes.io/version: 75.11.0
      chart: kube-prometheus-stack-75.11.0
      heritage: Helm
      release: kube-prom
    name: kube-prom-kube-prometheus-admission
    resourceVersion: "9503"
    uid: fcb99974-9750-48e2-a276-44e7c3bd6bca
  webhooks:
  - admissionReviewVersions:
    - v1
    - v1beta1
    clientConfig:
      caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJkekNDQVJ5Z0F3SUJBZ0lSQU9YblE2K1hvU2M4M2NCS0dFT3dDQzh3Q2dZSUtvWkl6ajBFQXdJd0R6RU4KTUFzR0ExVUVDaE1FYm1sc01UQWdGdzB5TlRBM01UWXlNalV5TXpaYUdBOHlNVEkxTURZeU1qSXlOVEl6TmxvdwpEekVOTUFzR0ExVUVDaE1FYm1sc01UQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VIQTBJQUJMQmpLQTJYCkJ3WjRKTGdsZWp3U0I2eVRvemNoU3Fld1V2aEJZOThBeUtVMEtOYWtscEw3SWlXeTRPZ1BQeUVrQWFNNHlPOHAKWWpCUFFmbERweDRnRzNTalZ6QlZNQTRHQTFVZER3RUIvd1FFQXdJQ0JEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRgpCUWNEQVRBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJURlhaWnl6dTNScmlsaE5VS0cxcWtmCnFnQXpOakFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBN2RIVDVvRWRXaGw1QnFjME1rVFBnYnFrOHgxVTltNjIKTEFIMWJmYzZzaThDSVFEYXNhbnJLQmJxUzVQTDF4RVJZOU0zYTlvd2Q2NDRJNmhRTjNyNzA3Z1lvUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
      service:
        name: kube-prom-kube-prometheus-operator
        namespace: monitoring
        path: /admission-prometheusrules/mutate
        port: 443
    failurePolicy: Ignore
    matchPolicy: Equivalent
    name: prometheusrulemutate.monitoring.coreos.com
    namespaceSelector: {}
    objectSelector: {}
    reinvocationPolicy: Never
    rules:
    - apiGroups:
      - monitoring.coreos.com
      apiVersions:
      - '*'
      operations:
      - CREATE
      - UPDATE
      resources:
      - prometheusrules
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
kind: List
metadata:
  resourceVersion: ""
